
class DNSE_CH
{
	constructor(roomSize, gain, sampleRate)
	{
		roomSize = Math.max(1, Math.min(13, roomSize));
		gain = Math.max(0, Math.min(total_gains.length - 1, gain));

		var totalGain = total_gains[gain];

		var srSelector = 1;
		if (sampleRate == 48000)
			srSelector = 2;
		else if (sampleRate == 32000)
			srSelector = 0;

		/* Convert Filter from 8-bit to 32-bit */
		var new_preset = [];
		for (var i = 0; i < preset_filters.length; i++)
		{	new_preset.push(preset_filters[i + 3] + (preset_filters[i + 2]  << 8) 
				+ (preset_filters[i + 1]  << 16) + (preset_filters[i + 1]  << 24)); 
		}
		preset_filters = new_preset;

		var new_preset_gains = [];
		for (var i = 0; i < preset_gains.length; i++)
		{	new_preset_gains.push(preset_gains[i + 3] + (preset_gains[i + 2]  << 8) 
				+ (preset_gains[i + 1]  << 16) + (preset_gains[i + 1]  << 24)); 
		}
		preset_gains = new_preset_gains;

		//auto presetFilter = &((PresetFilter *)preset_filters)[(roomSize - 1) * 3 + srSelector];
		var presetFilter = {};
		var preset_bucket = (roomSize - 1) * 3 + srSelector;
		presetFilter.tone = preset_filters[preset_bucket];
		presetFilter.absorb = preset_filters[preset_bucket + 1];
		presetFilter.d1c785c = preset_filters[preset_bucket + 2];
		presetFilter.gains = [];
		presetFilter.gains.push(preset_filters[preset_bucket + 3]);
		presetFilter.gains.push(preset_filters[preset_bucket + 4]);
		presetFilter.gains.push(preset_filters[preset_bucket + 5]);
		presetFilter.gains.push(preset_filters[preset_bucket + 6]);
		presetFilter.er_delays = [];
		presetFilter.er_delays.push(preset_filters[preset_bucket + 7]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 8]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 9]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 10]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 11]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 12]);
		presetFilter.er_delays.push(preset_filters[preset_bucket + 13]);
		presetFilter.er_ap1_delay = preset_filters[preset_bucket + 14];
		presetFilter.er_ap2_delay = preset_filters[preset_bucket + 15];
		presetFilter.ap3_delay = preset_filters[preset_bucket + 16];
		presetFilter.ap4_delay = preset_filters[preset_bucket + 17];
		presetFilter.ap5_delay = preset_filters[preset_bucket + 18];
		presetFilter.vbr1_delay = preset_filters[preset_bucket + 19];
		presetFilter.delay1_delay = preset_filters[preset_bucket + 20];
		presetFilter.ap6_delay = preset_filters[preset_bucket + 21];
		presetFilter.ap7_delay = preset_filters[preset_bucket + 22];
		presetFilter.ap8_delay = preset_filters[preset_bucket + 23];
		presetFilter.vbr2_delay = preset_filters[preset_bucket + 24];
		presetFilter.delay2_delay = preset_filters[preset_bucket + 25];
		presetFilter.er_ap1_gain = preset_filters[preset_bucket + 26];
		presetFilter.er_ap2_gain = preset_filters[preset_bucket + 27];
		presetFilter.ap3_gain = preset_filters[preset_bucket + 28];
		presetFilter.ap4_gain = preset_filters[preset_bucket + 29];
		presetFilter.ap5_gain = preset_filters[preset_bucket + 30];
		presetFilter.vbr1_gain = preset_filters[preset_bucket + 31];
		presetFilter.delay1_gain = preset_filters[preset_bucket + 32];
		presetFilter.ap6_gain = preset_filters[preset_bucket + 33];
		presetFilter.ap7_gain = preset_filters[preset_bucket + 34];
		presetFilter.ap8_gain = preset_filters[preset_bucket + 35];
		presetFilter.vbr2_gain = preset_filters[preset_bucket + 36];
		presetFilter.delay2_gain = preset_filters[preset_bucket + 37];
	
		//presetGain_ = &((PresetGain *)preset_gains)[(roomSize - 1)];
		this.presetGain_ = {};
		this.presetGain_.d_gain = preset_gains[(roomSize - 1) * 3];
		this.presetGain_.er_gain = preset_gains[(roomSize - 1) * 3 + 1];
		this.presetGain_.r_gain = preset_gains[(roomSize - 1) * 3 + 2];


		const PresetFilter_BUCKET_SIZE = 38;

		this.toneFilter_ = new ToneFilter(presetFilter.d1c785c,
													presetFilter.tone,
													presetFilter.gains,
													totalGain);
		this.dsFilter_ = new DelaySplitFilter(4159, presetFilter.gains, presetFilter.er_delays);
		this.er_ap1_ = new APFilter(Math.min(presetFilter.er_ap1_delay, 631), presetFilter.er_ap1_gain);
		this.er_ap2_ = new APFilter(Math.min(presetFilter.er_ap2_delay, 739), presetFilter.er_ap2_gain);

		var vbr1_delay = ((0xa3d * presetFilter.vbr1_delay) >> 12);
		this.ch1_ = new FilterChain();
		this.ch1_.add(new APFilter(Math.min(presetFilter.ap3_delay, 1933), presetFilter.ap3_gain));
		this.ch1_.add(new APFilter(Math.min(presetFilter.ap4_delay, 2843), presetFilter.ap4_gain));
		this.ch1_.add(new APFilter(Math.min(presetFilter.ap5_delay, 2053), presetFilter.ap5_gain));
		this.ch1_.add(new VbrFilter(Math.min(vbr1_delay, 2881), presetFilter.vbr1_gain, 0x14ce, 0x102));

		this.delay1_ = new DelayShiftFilter(Math.min(presetFilter.delay1_delay, 2837),
													 presetFilter.delay1_gain,
													 presetFilter.absorb,
													 12);

		var vbr2_delay = ((0xb1b * presetFilter.vbr2_delay) >> 12);
		this.ch2_ = new FilterChain();
		this.ch2_.add(new APFilter(Math.min(presetFilter.ap6_delay, 1637), presetFilter.ap6_gain));
		this.ch2_.add(new APFilter(Math.min(presetFilter.ap7_delay, 2749), presetFilter.ap7_gain));
		this.ch2_.add(new APFilter(Math.min(presetFilter.ap8_delay, 3079), presetFilter.ap8_gain));

		this.ch2_.add(new VbrFilter(Math.min(vbr2_delay, 3038), presetFilter.vbr2_gain, 0x17c6, 0xc0));
		this.delay2_ = new DelayShiftFilter(Math.min(presetFilter.delay2_delay, 2833),
													 presetFilter.delay2_gain,
													 presetFilter.absorb,
													 22);
	}

	filter(lb, rb, lb_out, rb_out, nSamples)
	{
		 for (var i = 0; i < nSamples; i++)
		 {
			  var sum = (lb[i] + rb[i]) >> 2;

			  var tone = this.toneFilter_.filter(sum);
			  var ret = this.dsFilter_.filter2(tone);

			  var ap1 = this.er_ap1_.filter(ret[0]);
			  var ap2 = this.er_ap2_.filter(ret[1]);

			  var sec1in = ap1 - this.delay2_.last();
			  var sec2in = ap2 + this.delay1_.last();

			  var dr1 = this.delay1_.filter(this.ch1_.filter(sec1in));
			  var dr2 = this.delay2_.filter(this.ch2_.filter(sec2in));

			  var r1 = ((dr1 * this.presetGain_.r_gain + ap1 * this.presetGain_.er_gain) >> 12);
			  var r2 = ((dr2 * this.presetGain_.r_gain + ap2 * this.presetGain_.er_gain) >> 12);

			  r1 = (r1 + lb[i]) >> 1;
			  r2 = (r2 + rb[i]) >> 1;

			  r1 = Math.min(0x7FFF, Math.max(-0x8000, r1));
			  r2 = Math.min(0x7FFF, Math.max(-0x8000, r2));

			  lb_out[i] = r1;
			  rb_out[i] = r2;
		 }
	}
};


var preset_filters = [
	0x73, 0x0a, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xf7, 0xf0, 0xff, 0xff,
	0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, 0xbd, 0xfa, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
	0x7f, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00,
	0x89, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
	0xa3, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,
	0xbf, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
	0xb3, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x5c, 0xf9, 0xff, 0xff, 0x4b, 0xfa, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0xb9, 0xf6, 0xff, 0xff, 0x33, 0xfb, 0xff, 0xff, 0xdf, 0xfb, 0xff, 0xff,
	0xe9, 0xf9, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x66, 0x0e, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00,
	0x00, 0x10, 0x00, 0x00, 0x8d, 0xec, 0xff, 0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00,
	0xe7, 0xf8, 0xff, 0xff, 0x9d, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
	0xc5, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
	0x47, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00,
	0xdf, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00,
	0x33, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x52, 0xf9, 0xff, 0xff, 0x27, 0xfa, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xa5, 0xf6, 0xff, 0xff,
	0x31, 0xfb, 0xff, 0xff, 0xe3, 0xfb, 0xff, 0xff, 0x03, 0xfa, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xac, 0x0f, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x94, 0xeb, 0xff, 0xff,
	0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, 0xf8, 0xff, 0xff, 0xad, 0x00, 0x00, 0x00,
	0xad, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00,
	0xd3, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
	0xf1, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00,
	0x15, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00,
	0x0d, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x47, 0xf9, 0xff, 0xff, 0x18, 0xfa, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0xa4, 0xf6, 0xff, 0xff, 0x23, 0xfb, 0xff, 0xff, 0xd2, 0xfb, 0xff, 0xff,
	0xec, 0xf9, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x10, 0x0a, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00,
	0xdd, 0x0f, 0x00, 0x00, 0x08, 0xf1, 0xff, 0xff, 0x4f, 0x05, 0x00, 0x00, 0xf8, 0x0e, 0x00, 0x00,
	0xd5, 0xfa, 0xff, 0xff, 0xd3, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
	0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00,
	0x25, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00,
	0x91, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x49, 0xf5, 0xff, 0xff, 0xe9, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7a, 0xf3, 0xff, 0xff,
	0xc2, 0xf6, 0xff, 0xff, 0x58, 0xf7, 0xff, 0xff, 0xd4, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xde, 0x0d, 0x00, 0x00, 0x06, 0x0b, 0x00, 0x00, 0xe3, 0x0f, 0x00, 0x00, 0x9f, 0xec, 0xff, 0xff,
	0x21, 0x07, 0x00, 0x00, 0x61, 0x13, 0x00, 0x00, 0xfc, 0xf8, 0xff, 0xff, 0x25, 0x01, 0x00, 0x00,
	0x25, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00,
	0x51, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
	0x91, 0x01, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
	0xc9, 0x01, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00,
	0xbb, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x41, 0xf5, 0xff, 0xff, 0xe0, 0xf5, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x87, 0xf3, 0xff, 0xff, 0xcc, 0xf6, 0xff, 0xff, 0x54, 0xf7, 0xff, 0xff,
	0xb2, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x18, 0x0f, 0x00, 0x00, 0xff, 0x0b, 0x00, 0x00,
	0xe5, 0x0f, 0x00, 0x00, 0xa6, 0xeb, 0xff, 0xff, 0x9b, 0x07, 0x00, 0x00, 0x5a, 0x14, 0x00, 0x00,
	0x80, 0xf8, 0xff, 0xff, 0x37, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
	0x85, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
	0x89, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00,
	0xb7, 0x01, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
	0x57, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x48, 0xf5, 0xff, 0xff, 0xe3, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7b, 0xf3, 0xff, 0xff,
	0xbc, 0xf6, 0xff, 0xff, 0x57, 0xf7, 0xff, 0xff, 0xbd, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xad, 0x09, 0x00, 0x00, 0xde, 0x07, 0x00, 0x00, 0xba, 0x0f, 0x00, 0x00, 0x18, 0xf1, 0xff, 0xff,
	0x5a, 0x05, 0x00, 0x00, 0xe8, 0x0e, 0x00, 0x00, 0xec, 0xfa, 0xff, 0xff, 0x33, 0x01, 0x00, 0x00,
	0x33, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,
	0x67, 0x01, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00,
	0xa5, 0x01, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00,
	0xe7, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00,
	0xd3, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x7f, 0xf4, 0xff, 0xff, 0x13, 0xf5, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0xfb, 0xf2, 0xff, 0xff, 0xe6, 0xf5, 0xff, 0xff, 0x5d, 0xf6, 0xff, 0xff,
	0xe7, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x55, 0x0d, 0x00, 0x00, 0xd8, 0x0a, 0x00, 0x00,
	0xc6, 0x0f, 0x00, 0x00, 0xb1, 0xec, 0xff, 0xff, 0x29, 0x07, 0x00, 0x00, 0x4f, 0x13, 0x00, 0x00,
	0x11, 0xf9, 0xff, 0xff, 0xa3, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
	0x09, 0x02, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
	0xb5, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00,
	0x4b, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00,
	0x1d, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x8a, 0xf4, 0xff, 0xff, 0x16, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xf4, 0xf2, 0xff, 0xff,
	0xd4, 0xf5, 0xff, 0xff, 0x72, 0xf6, 0xff, 0xff, 0xe3, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x83, 0x0e, 0x00, 0x00, 0xce, 0x0b, 0x00, 0x00, 0xc9, 0x0f, 0x00, 0x00, 0xb8, 0xeb, 0xff, 0xff,
	0xa2, 0x07, 0x00, 0x00, 0x48, 0x14, 0x00, 0x00, 0x95, 0xf8, 0xff, 0xff, 0xc1, 0x01, 0x00, 0x00,
	0xc1, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00,
	0x1d, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00,
	0x77, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00,
	0xd7, 0x02, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00,
	0xbd, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x7e, 0xf4, 0xff, 0xff, 0x0e, 0xf5, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0xf1, 0xf2, 0xff, 0xff, 0xe1, 0xf5, 0xff, 0xff, 0x5d, 0xf6, 0xff, 0xff,
	0xe8, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x4a, 0x09, 0x00, 0x00, 0xbd, 0x07, 0x00, 0x00,
	0x98, 0x0f, 0x00, 0x00, 0x29, 0xf1, 0xff, 0xff, 0x65, 0x05, 0x00, 0x00, 0xd7, 0x0e, 0x00, 0x00,
	0x04, 0xfb, 0xff, 0xff, 0x8d, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
	0xe7, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00,
	0xad, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00,
	0x2d, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
	0xf5, 0x02, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x37, 0xf4, 0xff, 0xff, 0xbf, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xc6, 0xf2, 0xff, 0xff,
	0x70, 0xf5, 0xff, 0xff, 0xfb, 0xf5, 0xff, 0xff, 0x92, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xcd, 0x0c, 0x00, 0x00, 0xab, 0x0a, 0x00, 0x00, 0xa9, 0x0f, 0x00, 0x00, 0xc3, 0xec, 0xff, 0xff,
	0x30, 0x07, 0x00, 0x00, 0x3d, 0x13, 0x00, 0x00, 0x27, 0xf9, 0xff, 0xff, 0x1d, 0x02, 0x00, 0x00,
	0x1d, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
	0x81, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x19, 0x01, 0x00, 0x00,
	0xf5, 0x02, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
	0x6d, 0x03, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00,
	0x47, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x2a, 0xf4, 0xff, 0xff, 0xb7, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0xb7, 0xf2, 0xff, 0xff, 0x77, 0xf5, 0xff, 0xff, 0xf7, 0xf5, 0xff, 0xff,
	0x8b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xef, 0x0d, 0x00, 0x00, 0x9c, 0x0b, 0x00, 0x00,
	0xae, 0x0f, 0x00, 0x00, 0xca, 0xeb, 0xff, 0xff, 0xa9, 0x07, 0x00, 0x00, 0x36, 0x14, 0x00, 0x00,
	0xa9, 0xf8, 0xff, 0xff, 0x4b, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00,
	0xdd, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00,
	0x3b, 0x03, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00,
	0x7f, 0x04, 0x00, 0x00, 0xfd, 0x04, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x2d, 0xf4, 0xff, 0xff, 0xb6, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xb8, 0xf2, 0xff, 0xff,
	0x80, 0xf5, 0xff, 0xff, 0xf9, 0xf5, 0xff, 0xff, 0x92, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xe7, 0x08, 0x00, 0x00, 0x9c, 0x07, 0x00, 0x00, 0x76, 0x0f, 0x00, 0x00, 0x3a, 0xf1, 0xff, 0xff,
	0x6f, 0x05, 0x00, 0x00, 0xc6, 0x0e, 0x00, 0x00, 0x1b, 0xfb, 0xff, 0xff, 0xe7, 0x01, 0x00, 0x00,
	0xe7, 0x01, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00,
	0x41, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
	0xab, 0x02, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00,
	0x13, 0x03, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00,
	0xf5, 0x02, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x02, 0xf4, 0xff, 0xff, 0x86, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x98, 0xf2, 0xff, 0xff, 0x3b, 0xf5, 0xff, 0xff, 0xba, 0xf5, 0xff, 0xff,
	0x61, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x44, 0x0c, 0x00, 0x00, 0x7d, 0x0a, 0x00, 0x00,
	0x8d, 0x0f, 0x00, 0x00, 0xd5, 0xec, 0xff, 0xff, 0x37, 0x07, 0x00, 0x00, 0x2b, 0x13, 0x00, 0x00,
	0x3c, 0xf9, 0xff, 0xff, 0xa1, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
	0x3b, 0x03, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
	0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00,
	0xa9, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00,
	0x09, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xfe, 0xf3, 0xff, 0xff, 0x88, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x98, 0xf2, 0xff, 0xff,
	0x39, 0xf5, 0xff, 0xff, 0xbb, 0xf5, 0xff, 0xff, 0x5d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x5a, 0x0d, 0x00, 0x00, 0x6b, 0x0b, 0x00, 0x00, 0x93, 0x0f, 0x00, 0x00, 0xdc, 0xeb, 0xff, 0xff,
	0xaf, 0x07, 0x00, 0x00, 0x24, 0x14, 0x00, 0x00, 0xbe, 0xf8, 0xff, 0xff, 0xd7, 0x02, 0x00, 0x00,
	0xd7, 0x02, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00,
	0x5b, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00,
	0xfb, 0x03, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00,
	0x93, 0x04, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00,
	0x69, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xfe, 0xf3, 0xff, 0xff, 0x87, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x9b, 0xf2, 0xff, 0xff, 0x3d, 0xf5, 0xff, 0xff, 0xb8, 0xf5, 0xff, 0xff,
	0x5b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x84, 0x08, 0x00, 0x00, 0x7b, 0x07, 0x00, 0x00,
	0x54, 0x0f, 0x00, 0x00, 0x4b, 0xf1, 0xff, 0xff, 0x79, 0x05, 0x00, 0x00, 0xb5, 0x0e, 0x00, 0x00,
	0x33, 0xfb, 0xff, 0xff, 0x41, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00,
	0xcf, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00,
	0x29, 0x03, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00,
	0x5d, 0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x73, 0x03, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xe1, 0xf3, 0xff, 0xff, 0x67, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x85, 0xf2, 0xff, 0xff,
	0x18, 0xf5, 0xff, 0xff, 0x94, 0xf5, 0xff, 0xff, 0x48, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xbc, 0x0b, 0x00, 0x00, 0x50, 0x0a, 0x00, 0x00, 0x71, 0x0f, 0x00, 0x00, 0xe7, 0xec, 0xff, 0xff,
	0x3e, 0x07, 0x00, 0x00, 0x19, 0x13, 0x00, 0x00, 0x52, 0xf9, 0xff, 0xff, 0x1d, 0x03, 0x00, 0x00,
	0x1d, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00,
	0xad, 0x03, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00,
	0x5d, 0x04, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00,
	0xff, 0x04, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00,
	0xd5, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xe3, 0xf3, 0xff, 0xff, 0x65, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x88, 0xf2, 0xff, 0xff, 0x1b, 0xf5, 0xff, 0xff, 0x94, 0xf5, 0xff, 0xff,
	0x3e, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xc5, 0x0c, 0x00, 0x00, 0x39, 0x0b, 0x00, 0x00,
	0x78, 0x0f, 0x00, 0x00, 0xee, 0xeb, 0xff, 0xff, 0xb5, 0x07, 0x00, 0x00, 0x12, 0x14, 0x00, 0x00,
	0xd3, 0xf8, 0xff, 0xff, 0x5f, 0x03, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00,
	0x3f, 0x04, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00,
	0x7b, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00,
	0xbd, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00,
	0x9d, 0x06, 0x00, 0x00, 0x4f, 0x07, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xe1, 0xf3, 0xff, 0xff, 0x62, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x87, 0xf2, 0xff, 0xff,
	0x24, 0xf5, 0xff, 0xff, 0x93, 0xf5, 0xff, 0xff, 0x48, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x21, 0x08, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 0x5c, 0xf1, 0xff, 0xff,
	0x83, 0x05, 0x00, 0x00, 0xa4, 0x0e, 0x00, 0x00, 0x4b, 0xfb, 0xff, 0xff, 0xa1, 0x02, 0x00, 0x00,
	0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00,
	0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
	0xad, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xad, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00,
	0x3f, 0x04, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00,
	0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xd0, 0xf3, 0xff, 0xff, 0x51, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x7f, 0xf2, 0xff, 0xff, 0x01, 0xf5, 0xff, 0xff, 0x78, 0xf5, 0xff, 0xff,
	0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x33, 0x0b, 0x00, 0x00, 0x22, 0x0a, 0x00, 0x00,
	0x55, 0x0f, 0x00, 0x00, 0xfa, 0xec, 0xff, 0xff, 0x44, 0x07, 0x00, 0x00, 0x06, 0x13, 0x00, 0x00,
	0x67, 0xf9, 0xff, 0xff, 0x97, 0x03, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00,
	0x7f, 0x04, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00,
	0x99, 0x01, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
	0x11, 0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00,
	0xf7, 0x06, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xd0, 0xf3, 0xff, 0xff, 0x4d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7f, 0xf2, 0xff, 0xff,
	0xfe, 0xf4, 0xff, 0xff, 0x78, 0xf5, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x31, 0x0c, 0x00, 0x00, 0x08, 0x0b, 0x00, 0x00, 0x5e, 0x0f, 0x00, 0x00, 0x00, 0xec, 0xff, 0xff,
	0xba, 0x07, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0xe8, 0xf8, 0xff, 0xff, 0xf1, 0x03, 0x00, 0x00,
	0xf1, 0x03, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00,
	0xa3, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
	0x81, 0x05, 0x00, 0x00, 0xdb, 0x07, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00,
	0x53, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x9d, 0x07, 0x00, 0x00, 0x83, 0x08, 0x00, 0x00,
	0x17, 0x06, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xce, 0xf3, 0xff, 0xff, 0x4f, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x7d, 0xf2, 0xff, 0xff, 0x03, 0xf5, 0xff, 0xff, 0x7d, 0xf5, 0xff, 0xff,
	0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xbd, 0x07, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00,
	0x11, 0x0f, 0x00, 0x00, 0x6d, 0xf1, 0xff, 0xff, 0x8c, 0x05, 0x00, 0x00, 0x93, 0x0e, 0x00, 0x00,
	0x63, 0xfb, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00,
	0xb3, 0x03, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00,
	0x51, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00,
	0x2d, 0x04, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00,
	0xbf, 0x05, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xc0, 0xf3, 0xff, 0xff, 0x40, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x6e, 0xf2, 0xff, 0xff,
	0xeb, 0xf4, 0xff, 0xff, 0x6c, 0xf5, 0xff, 0xff, 0x1b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0xab, 0x0a, 0x00, 0x00, 0xf5, 0x09, 0x00, 0x00, 0x39, 0x0f, 0x00, 0x00, 0x0c, 0xed, 0xff, 0xff,
	0x4a, 0x07, 0x00, 0x00, 0xf4, 0x12, 0x00, 0x00, 0x7d, 0xf9, 0xff, 0xff, 0x19, 0x04, 0x00, 0x00,
	0x19, 0x04, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00,
	0xe1, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00,
	0xc9, 0x05, 0x00, 0x00, 0x33, 0x08, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00,
	0x9d, 0x06, 0x00, 0x00, 0x8f, 0x03, 0x00, 0x00, 0xed, 0x07, 0x00, 0x00, 0xdb, 0x08, 0x00, 0x00,
	0x65, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xc4, 0xf3, 0xff, 0xff, 0x3d, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x6f, 0xf2, 0xff, 0xff, 0xec, 0xf4, 0xff, 0xff, 0x64, 0xf5, 0xff, 0xff,
	0x1b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x9c, 0x0b, 0x00, 0x00, 0xd6, 0x0a, 0x00, 0x00,
	0x43, 0x0f, 0x00, 0x00, 0x12, 0xec, 0xff, 0xff, 0xc0, 0x07, 0x00, 0x00, 0xee, 0x13, 0x00, 0x00,
	0xfd, 0xf8, 0xff, 0xff, 0x7f, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00,
	0x8f, 0x05, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00,
	0xf7, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0xef, 0x08, 0x00, 0x00,
	0x47, 0x06, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00,
	0x9f, 0x08, 0x00, 0x00, 0xa9, 0x09, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0xd9, 0x06, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xc1, 0xf3, 0xff, 0xff, 0x43, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x6f, 0xf2, 0xff, 0xff,
	0xeb, 0xf4, 0xff, 0xff, 0x66, 0xf5, 0xff, 0xff, 0x19, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x5a, 0x07, 0x00, 0x00, 0x18, 0x07, 0x00, 0x00, 0xf0, 0x0e, 0x00, 0x00, 0x7e, 0xf1, 0xff, 0xff,
	0x95, 0x05, 0x00, 0x00, 0x82, 0x0e, 0x00, 0x00, 0x7b, 0xfb, 0xff, 0xff, 0x55, 0x03, 0x00, 0x00,
	0x55, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00,
	0xf5, 0x03, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00,
	0xb1, 0x04, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00,
	0x65, 0x05, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
	0x2f, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xb6, 0xf3, 0xff, 0xff, 0x3c, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff, 0xe2, 0xf4, 0xff, 0xff, 0x57, 0xf5, 0xff, 0xff,
	0x0c, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x22, 0x0a, 0x00, 0x00, 0xc7, 0x09, 0x00, 0x00,
	0x1d, 0x0f, 0x00, 0x00, 0x1e, 0xed, 0xff, 0xff, 0x50, 0x07, 0x00, 0x00, 0xe2, 0x12, 0x00, 0x00,
	0x93, 0xf9, 0xff, 0xff, 0x9d, 0x04, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00,
	0xbf, 0x05, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00,
	0x09, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x35, 0x09, 0x00, 0x00,
	0x79, 0x06, 0x00, 0x00, 0x73, 0x07, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00,
	0xe9, 0x08, 0x00, 0x00, 0xef, 0x09, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x13, 0x07, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xb7, 0xf3, 0xff, 0xff, 0x32, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff,
	0xe1, 0xf4, 0xff, 0xff, 0x56, 0xf5, 0xff, 0xff, 0x0d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x08, 0x0b, 0x00, 0x00, 0xa4, 0x0a, 0x00, 0x00, 0x29, 0x0f, 0x00, 0x00, 0x25, 0xec, 0xff, 0xff,
	0xc5, 0x07, 0x00, 0x00, 0xdb, 0x13, 0x00, 0x00, 0x12, 0xf9, 0xff, 0xff, 0xfd, 0x04, 0x00, 0x00,
	0xfd, 0x04, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00,
	0xf3, 0x05, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00,
	0x09, 0x07, 0x00, 0x00, 0x13, 0x0a, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00,
	0x0f, 0x08, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0xad, 0x09, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00,
	0xc9, 0x07, 0x00, 0x00, 0xb5, 0x07, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xb6, 0xf3, 0xff, 0xff, 0x34, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff, 0xdf, 0xf4, 0xff, 0xff, 0x59, 0xf5, 0xff, 0xff,
	0x0d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xf7, 0x06, 0x00, 0x00, 0xf7, 0x06, 0x00, 0x00,
	0xcf, 0x0e, 0x00, 0x00, 0x8f, 0xf1, 0xff, 0xff, 0x9e, 0x05, 0x00, 0x00, 0x71, 0x0e, 0x00, 0x00,
	0x93, 0xfb, 0xff, 0xff, 0xb3, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00,
	0x9d, 0x04, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0xcf, 0x04, 0x00, 0x00,
	0xa3, 0x01, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00,
	0x51, 0x05, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00,
	0x27, 0x07, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xc0, 0xf3, 0xff, 0xff, 0x2e, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x62, 0xf2, 0xff, 0xff,
	0xd4, 0xf4, 0xff, 0xff, 0x4e, 0xf5, 0xff, 0xff, 0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x9a, 0x09, 0x00, 0x00, 0x9a, 0x09, 0x00, 0x00, 0x02, 0x0f, 0x00, 0x00, 0x31, 0xed, 0xff, 0xff,
	0x55, 0x07, 0x00, 0x00, 0xcf, 0x12, 0x00, 0x00, 0xa9, 0xf9, 0xff, 0xff, 0x15, 0x05, 0x00, 0x00,
	0x15, 0x05, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00,
	0x07, 0x06, 0x00, 0x00, 0xa1, 0x06, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00,
	0x27, 0x07, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00,
	0x33, 0x08, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0xd9, 0x09, 0x00, 0x00, 0x03, 0x0b, 0x00, 0x00,
	0xeb, 0x07, 0x00, 0x00, 0xcf, 0x07, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xac, 0xf3, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff,
	0xcd, 0xf4, 0xff, 0xff, 0x60, 0xf2, 0xff, 0xff, 0xd3, 0xf4, 0xff, 0xff, 0x4a, 0xf5, 0xff, 0xff,
	0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x73, 0x0a, 0x00, 0x00, 0x73, 0x0a, 0x00, 0x00,
	0x0f, 0x0f, 0x00, 0x00, 0x37, 0xec, 0xff, 0xff, 0xc9, 0x07, 0x00, 0x00, 0xc9, 0x13, 0x00, 0x00,
	0x28, 0xf9, 0xff, 0xff, 0x8f, 0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00,
	0xf1, 0x06, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
	0x77, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0x1b, 0x0b, 0x00, 0x00,
	0xc9, 0x07, 0x00, 0x00, 0xf9, 0x08, 0x00, 0x00, 0xef, 0x08, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00,
	0xbd, 0x0a, 0x00, 0x00, 0x07, 0x0c, 0x00, 0x00, 0x9f, 0x08, 0x00, 0x00, 0x83, 0x08, 0x00, 0x00,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xac, 0xf3, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x60, 0xf2, 0xff, 0xff,
	0xd5, 0xf4, 0xff, 0xff, 0x4e, 0xf5, 0xff, 0xff, 0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
	0x73, 0x0a, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xf7, 0xf0, 0xff, 0xff,
	0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, 0xbd, 0xfa, 0xff, 0xff, 0x43, 0x00, 0x00, 0x00,
	0xad, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,
	0xf3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
	0x39, 0x01, 0x00, 0x00, 0x7f, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
	0x33, 0x02, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
	0x09, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0x0e, 0x00, 0x00, 0xcd, 0x0c, 0x00, 0x00,
	0x00, 0x10, 0x00, 0x00, 0x8d, 0xec, 0xff, 0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00,
	0xe7, 0xf8, 0xff, 0xff, 0x61, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
	0x91, 0x01, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00,
	0x35, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
	0xab, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
	0xf3, 0x01, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00,
	0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xac, 0x0f, 0x00, 0x00, 0xef, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x94, 0xeb, 0xff, 0xff,
	0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, 0xf8, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
	0xe7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00,
	0xdf, 0x01, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00,
	0x55, 0x03, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00,
	0x05, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x4a, 0x09, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00,
	0x65, 0x0f, 0x00, 0x00, 0x42, 0xf1, 0xff, 0xff, 0x74, 0x05, 0x00, 0x00, 0xbe, 0x0e, 0x00, 0x00,
	0x27, 0xfb, 0xff, 0xff, 0x43, 0x00, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00,
	0x15, 0x05, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0xab, 0x0a, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00,
	0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00,
	0x7f, 0x04, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
	0xb3, 0x03, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00,
	0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xcd, 0x0c, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00, 0x7f, 0x0f, 0x00, 0x00, 0xde, 0xec, 0xff, 0xff,
	0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00, 0x47, 0xf9, 0xff, 0xff, 0x61, 0x00, 0x00, 0x00,
	0xa3, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x8d, 0x07, 0x00, 0x00,
	0xb7, 0x0e, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
	0x07, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00,
	0x05, 0x09, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00,
	0xdb, 0x07, 0x00, 0x00, 0x5f, 0x09, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xef, 0x0d, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00,
	0x86, 0x0f, 0x00, 0x00, 0xe5, 0xeb, 0xff, 0xff, 0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00,
	0xc8, 0xf8, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00,
	0x9d, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x03, 0x10, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00,
	0x95, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00,
	0xb9, 0x06, 0x00, 0x00, 0xf9, 0x08, 0x00, 0x00, 0xd9, 0x09, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00,
	0x8f, 0x05, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x9b, 0x08, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00,
	0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0xb5, 0x08, 0x00, 0x00, 0x8c, 0x07, 0x00, 0x00, 0x65, 0x0f, 0x00, 0x00, 0x42, 0xf1, 0xff, 0xff,
	0x74, 0x05, 0x00, 0x00, 0xbe, 0x0e, 0x00, 0x00, 0x27, 0xfb, 0xff, 0xff, 0x49, 0x00, 0x00, 0x00,
	0xd7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0xeb, 0x07, 0x00, 0x00, 0x51, 0x08, 0x00, 0x00,
	0x89, 0x09, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00,
	0xc7, 0x03, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00,
	0x61, 0x07, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00,
	0x6d, 0x07, 0x00, 0x00, 0x61, 0x07, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x00, 0x0c, 0x00, 0x00, 0x66, 0x0a, 0x00, 0x00,
	0x7f, 0x0f, 0x00, 0x00, 0xde, 0xec, 0xff, 0xff, 0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00,
	0x47, 0xf9, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00,
	0xe7, 0x0a, 0x00, 0x00, 0x7b, 0x0b, 0x00, 0x00, 0x2b, 0x0d, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00,
	0x1d, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00,
	0x57, 0x07, 0x00, 0x00, 0x6b, 0x09, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0xe7, 0x05, 0x00, 0x00,
	0x09, 0x07, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00,
	0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x10, 0x0d, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, 0x86, 0x0f, 0x00, 0x00, 0xe5, 0xeb, 0xff, 0xff,
	0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00, 0xc8, 0xf8, 0xff, 0xff, 0x6d, 0x00, 0x00, 0x00,
	0x43, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xdd, 0x0b, 0x00, 0x00, 0x77, 0x0c, 0x00, 0x00,
	0x4b, 0x0e, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00,
	0xab, 0x05, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0x3d, 0x0a, 0x00, 0x00,
	0x15, 0x0b, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0xb5, 0x07, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00,
	0x1b, 0x0b, 0x00, 0x00, 0x11, 0x0b, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
	0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff
];

var preset_gains = [
	0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 
	0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00,
];

var total_gains = [ 0x0, 0x19a, 0x333 ];





class FilterChain
{
	constructor()
	{	this.chain_ = [];
	}

	add(filter)
	{
		this.chain_.push(filter);
	}

	filter(inb)
	{
		for (var i = 0; i < this.chain_.length; i++)
		{
			inb = this.chain_[i].filter(inb);
		}
		return inb;
	}
};


class DelayFilter
{
	constructor(delay)
	{
	}
};


class APFilter
{
	constructor(delay, gain)
	{	
		this.delay_ = delay
		this.delay_buff_ = [];
		for (var i = 0; i < delay; i++)
		{
			this.delay_buff_.push(0);
		}
		this.gain_ = gain;
	}

	filter(inb)
	{
		var last = this.delay_buff_[this.delay_buff_.length - 1]; 
		this.delay_buff_.splice(this.delay_buff_.length - 1, 1);
		var first = inb + ((this.gain_ * last + 0x800) >> 12);
		this.delay_buff_.splice(0, 0, first);
		return last - (((this.gain_ * first) + 0x800) >> 12);
	}
};


class DelaySplitFilter
{
	constructor(delay, gains, er_delays)
	{
		this.delay_ = delay
		this.delay_buff_ = [];
		for (var i = 0; i < delay; i++)
		{
			this.delay_buff_.push(0);
		}

		this.gains_ = gains;
		this.er_delays_ = er_delays;
	}

	filter2(inb)
	{
		this.delay_buff_.splice(this.delay_buff_.length - 1, 1);
		this.delay_buff_.splice(0, 0, inb);

		var l = (this.delay_buff_[this.er_delays_[0]] >> 1) + (this.delay_buff_[this.er_delays_[1]])
			   + (this.delay_buff_[this.er_delays_[3]] >> 1) + (this.delay_buff_[this.er_delays_[5]] >> 1);
		var r = (this.delay_buff_[this.er_delays_[0]] >> 1) + (this.delay_buff_[this.er_delays_[2]])
			   + (this.delay_buff_[this.er_delays_[4]] >> 1) + (this.delay_buff_[this.er_delays_[6]] >> 1);

		return [ l, r ];
	}
};


class DelayShiftFilter
{
	constructor(delay, gain, absorb, out_shift)
	{
		this.delay_ = delay
		this.delay_buff_ = [];
		for (var i = 0; i < delay; i++)
		{
			this.delay_buff_.push(0);
		}
		this.gain_ = gain;
		this.absorb_ = absorb;
		this.out_shift_ = out_shift;
		this.flow_ = 0;
	}

	last()
	{
		var last = this.delay_buff_[this.delay_buff_.length - 1]
		return (last * this.gain_) >> 12;
	}

	filter(inb)
	{
		this.delay_buff_.splice(this.delay_buff_.length - 1, 1);
		this.flow_ += ((((inb - this.flow_) * this.absorb_) + 0x800) >> 12);
		this.delay_buff_.splice(0, 0, this.flow_);

		return this.delay_buff_[this.out_shift_ - 1];
	}
};

class VbrFilter
{
	constructor(delay, gain, shift, ggain)
	{

		this.delay_ = delay + ggain + 3;
		this.delay_buff_ = [];
		for (var i = 0; i < delay; i++)
		{
			this.delay_buff_.push(0);
		}
		this.shift_ = shift;
		this.gain_ = gain;
		this.ggain_ = ggain;
		this.vbr_delay_ = delay;

		this.v66 = 0;
		this.v66_1 = 0;
	}

	filter(inb)
	{
		this.delay_buff_.splice(this.delay_buff_.length - 1, 1);
		this.v66 += this.shift_;
		if (this.v66 > 0x20000000)
		{
			this.v66 = 0xE0000000;
		}
		var pre_offset = (this.vbr_delay_ << 12) + this.ggain_ * (Math.abs(this.v66) >> 17);
		var offset = (pre_offset >> 12);
		/// ...
		// 0x20000000 >> 17 = 0x1000 ... ?
		var offset_s = 0x1000 - (pre_offset - (pre_offset >> 12 << 12));
		// notice off-by-one when using deque instead of circular buffer
		var data_2 = this.delay_buff_[Math.min(offset + 1, this.delay_buff_.length - 1)];
		var data_1 = this.delay_buff_[Math.min(offset, this.delay_buff_.length - 1)];
		this.v66_1 = data_2 + ((offset_s * data_1) >> 12) - ((offset_s * this.v66_1) >> 12);
		var y = this.v66_1 - ((inb * this.gain_) >> 12);
		var first = inb + ((y * this.gain_) >> 12);
		this.delay_buff_.splice(0, 0, first);
		return y;
	}
};


class ToneFilter
{
	constructor(d1c785c, tone, gains, total_gain)
	{
		this.d1c785c_ = d1c785c;
		this.tone_ = tone;
		this.total_gain_ = total_gain;
		this.gains_ = gains;

		this.v_tone = 0;
		this.v1_p = 0;
		this.v2_p = 0;
	}

	filter(inb)
	{
		this.v_tone += ((inb - this.v_tone) * this.tone_ + 0x800) >> 12;

		/* JavaScript supports 64-bit integers, but does not support bit-wise operations of 64-bit integers (only 32 bits ok). */
		var v1 = this.v1_p * this.gains_[2] + this.v2_p * this.gains_[3] + (this.v_tone *2*2*2*2*2*2*2*2*2*2*2*2 /*<< 12*/);
		var v2 = this.v1_p * this.gains_[0] + this.v2_p * this.gains_[1];

		this.v2_p = this.v1_p;
		this.v1_p = v1 /2/2/2/2/2/2/2/2/2/2/2/2 /* >> 12*/;

		return ((((v1 * this.d1c785c_ /2/2/2/2/2/2/2/2/2/2/2/2 /*>> 12*/) + v2) /2/2/2/2/2/2/2/2/2/2/2/2/*>> 12*/) * this.total_gain_) /2/2/2/2/2/2/2/2/2/2/2/2 /*>> 12*/;
	}
};




var dnse_ch = new DNSE_CH(1, 1, 44100);
const SAMPLE_SIZE = 100;
var lb = [];
var rb = [];
var lo = [];
var ro = [];
for (var i = 0; i < SAMPLE_SIZE; i++)
{	lb.push(i);
	rb.push(i);
}
dnse_ch.filter(lb, rb, lo, ro, SAMPLE_SIZE);
for (var i = 0; i < SAMPLE_SIZE; i++)
{	console.log(i + ": " + lo[i] + ", " + ro[i]);
}

