import java.util.*;
import java.io.*;
import java.io.Serializable;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.file.Files;
import java.nio.file.Paths;

abstract class Filter //implements Closeable
{
	public abstract void filter(short lb, short rb, short lb_out, short rb_out, int nSamples);
}


public class DNSE_CH //extends Filter
{
	//

	public static void main(String[] args)
	{
		DNSE_CH dnse_ch = new DNSE_CH(10, 9, 44100);

		try {
			//byte[] iData = Files.readAllBytes(Paths.get("f:/Work/Q2 player/sine10.pcm"));
			byte[] iData = Files.readAllBytes(Paths.get("f:/Work/Q2 player/Eyes On Me 35.pcm"));
			FileOutputStream outputStream = new FileOutputStream("f:/Work/Q2 player/sine10.out.pcm");

			ByteBuffer iBuf = ByteBuffer.wrap(iData);
			iBuf.order(ByteOrder.LITTLE_ENDIAN);
			
			ByteBuffer oBuf = ByteBuffer.allocate(iData.length);
			oBuf.order(ByteOrder.LITTLE_ENDIAN);

			for (int off = 0; off < iData.length / 4; off++)
			{
				var lb = iBuf.getShort();
				var rb = iBuf.getShort();

				var o = dnse_ch.filter(lb, rb);

				oBuf.putShort(o[0]);
				oBuf.putShort(o[1]);
			}
			
			outputStream.write(oBuf.array());
			outputStream.close();

		} catch (Exception e) {
			System.out.println(e.toString());
			return;
		}
	}

	public DNSE_CH(int roomSize, int gain, int sampleRate)
	{
		roomSize = Math.max(1, Math.min(13, roomSize));
		gain = Math.max(0, Math.min(Globals.total_gains.length - 1, gain));

		int totalGain = Globals.total_gains[gain];

		int srSelector = 1;
		if (sampleRate == 48000)
		{
			srSelector = 2;
		}
		else if (sampleRate == 32000)
		{
			srSelector = 0;
		}

		//try {
			// presetFilter = ((PresetFilter[])Globals.getObject(Globals.preset_filters))[(roomSize - 1) * 3 + srSelector];
		PresetFilter presetFilter = new PresetFilter();
		{
			int offset = Integer.BYTES * 38 * ((roomSize - 1) * 3 + srSelector);
			presetFilter.tone = (Globals.preset_filters[offset + Integer.BYTES*0] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*0 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*0 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*0 + 3] << 24); 
			presetFilter.absorb = (Globals.preset_filters[offset + Integer.BYTES*1] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*1 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*1 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*1 + 3] << 24); 
			presetFilter. d1c785c = (Globals.preset_filters[offset + Integer.BYTES*2] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*2 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*2 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*2 + 3] << 24); 
			presetFilter.gains[0] =  (Globals.preset_filters[offset + Integer.BYTES*3] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*3 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*3 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*3 + 3] << 24); 
			presetFilter.gains[1] =  (Globals.preset_filters[offset + Integer.BYTES*4] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*4 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*4 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*4 + 3] << 24); 
			presetFilter.gains[2] =  (Globals.preset_filters[offset + Integer.BYTES*5] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*5 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*5 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*5 + 3] << 24); 
			presetFilter.gains[3] =  (Globals.preset_filters[offset + Integer.BYTES*6] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*6 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*6 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*6 + 3] << 24); 
			presetFilter.er_delays[0] =  (Globals.preset_filters[offset + Integer.BYTES*7] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*7 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*7 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*7 + 3] << 24); 
			presetFilter.er_delays[1] =  (Globals.preset_filters[offset + Integer.BYTES*8] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*8 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*8 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*8 + 3] << 24); 
			presetFilter.er_delays[2] = (Globals.preset_filters[offset + Integer.BYTES*9] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*9 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*9 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*9 + 3] << 24); 
			presetFilter.er_delays[3] = (Globals.preset_filters[offset + Integer.BYTES*10] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*10 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*10 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*10 + 3] << 24); 
			presetFilter.er_delays[4] = (Globals.preset_filters[offset + Integer.BYTES*11] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*11 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*11 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*11 + 3] << 24); 
			presetFilter.er_delays[5] = (Globals.preset_filters[offset + Integer.BYTES*12] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*12 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*12 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*12 + 3] << 24); 
			presetFilter.er_delays[6] =  (Globals.preset_filters[offset + Integer.BYTES*13] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*13 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*13 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*13 + 3] << 24); 
			presetFilter.er_ap1_delay = (Globals.preset_filters[offset + Integer.BYTES*14] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*14 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*14 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*14 + 3] << 24); 
			presetFilter.er_ap2_delay = (Globals.preset_filters[offset + Integer.BYTES*15] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*15 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*15 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*15 + 3] << 24); 
			presetFilter.ap3_delay =  (Globals.preset_filters[offset + Integer.BYTES*16] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*16 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*16 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*16 + 3] << 24); 
			presetFilter.ap4_delay =  (Globals.preset_filters[offset + Integer.BYTES*17] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*17 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*17 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*17 + 3] << 24); 
			presetFilter.ap5_delay =  (Globals.preset_filters[offset + Integer.BYTES*18] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*18 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*18 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*18 + 3] << 24); 
			presetFilter.vbr1_delay =  (Globals.preset_filters[offset + Integer.BYTES*19] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*19 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*19 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*19 + 3] << 24); 
			presetFilter.delay1_delay =  (Globals.preset_filters[offset + Integer.BYTES*20] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*20 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*20 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*20 + 3] << 24); 
			presetFilter.ap6_delay =  (Globals.preset_filters[offset + Integer.BYTES*21] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*21 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*21 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*21 + 3] << 24); 
			presetFilter.ap7_delay =  (Globals.preset_filters[offset + Integer.BYTES*22] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*22 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*22 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*22 + 3] << 24); 
			presetFilter.ap8_delay =  (Globals.preset_filters[offset + Integer.BYTES*23] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*23 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*23 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*23 + 3] << 24); 
			presetFilter.vbr2_delay =  (Globals.preset_filters[offset + Integer.BYTES*24] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*24 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*24 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*24 + 3] << 24); 
			presetFilter.delay2_delay =  (Globals.preset_filters[offset + Integer.BYTES*25] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*25 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*25 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*25 + 3] << 24); 
			presetFilter.er_ap1_gain =  (Globals.preset_filters[offset + Integer.BYTES*26] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*26 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*26 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*26 + 3] << 24); 
			presetFilter.er_ap2_gain = (Globals.preset_filters[offset + Integer.BYTES*27] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*27 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*27 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*27 + 3] << 24); 
			presetFilter.ap3_gain =  (Globals.preset_filters[offset + Integer.BYTES*28] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*28 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*28 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*28 + 3] << 24); 
			presetFilter.ap4_gain =  (Globals.preset_filters[offset + Integer.BYTES*29] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*29 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*29 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*29 + 3] << 24); 
			presetFilter.ap5_gain =  (Globals.preset_filters[offset + Integer.BYTES*30] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*30 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*30 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*30 + 3] << 24); 
			presetFilter.vbr1_gain =  (Globals.preset_filters[offset + Integer.BYTES*31] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*31 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*31 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*31 + 3] << 24); 
			presetFilter.delay1_gain =  (Globals.preset_filters[offset + Integer.BYTES*32] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*32 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*32 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*32 + 3] << 24); 
			presetFilter.ap6_gain =  (Globals.preset_filters[offset + Integer.BYTES*33] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*33 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*33 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*33 + 3] << 24); 
			presetFilter.ap7_gain =  (Globals.preset_filters[offset + Integer.BYTES*34] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*34 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*34 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*34 + 3] << 24); 
			presetFilter.ap8_gain =  (Globals.preset_filters[offset + Integer.BYTES*35] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*35 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*35 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*35 + 3] << 24); 
			presetFilter.vbr2_gain =  (Globals.preset_filters[offset + Integer.BYTES*36] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*36 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*36 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*36 + 3] << 24); 
			presetFilter.delay2_gain = (Globals.preset_filters[offset + Integer.BYTES*37] << 0 & 0x000000ff) + (Globals.preset_filters[offset + Integer.BYTES*37 + 1] << 8 & 0x0000ffff) + (Globals.preset_filters[offset + Integer.BYTES*37 + 2] << 16 & 0x00ffffff) + (Globals.preset_filters[offset + Integer.BYTES*37 + 3] << 24); 

			//presetGain_ = ((PresetGain[])Globals.getObject(Globals.preset_gains))[(roomSize - 1)];
			presetGain_ = new PresetGain();
			int offset2 = (roomSize - 1) * 3 * Integer.BYTES;
			//presetGain_.d_gain = (Globals.preset_gains[offset2 + Integer.BYTES*0] << 0 & 0x000000ff) + (Globals.preset_gains[offset2 +  Integer.BYTES*0 + 1] << 8 & 0x0000ffff) + (Globals.preset_gains[offset2 + Integer.BYTES*0 + 2] << 16 & 0x00ffffff) + (Globals.preset_gains[offset2 + Integer.BYTES*0 + 3] << 24);
			presetGain_.er_gain = (Globals.preset_gains[offset2 + Integer.BYTES*1] << 0 & 0x000000ff) + (Globals.preset_gains[offset2 +  Integer.BYTES*1 + 1] << 8 & 0x0000ffff) + (Globals.preset_gains[offset2 + Integer.BYTES*1 + 2] << 16 & 0x00ffffff ) + (Globals.preset_gains[offset2 + Integer.BYTES*1 + 3] << 24);

			presetGain_.r_gain = (Globals.preset_gains[offset2 + Integer.BYTES*2] << 0 & 0x000000ff) + (Globals.preset_gains[offset2 +  Integer.BYTES*2 + 1] << 8 & 0x0000ffff) + (Globals.preset_gains[offset2 + Integer.BYTES*2 + 2] << 16 & 0x00ffffff) + (Globals.preset_gains[offset2 + Integer.BYTES*2 + 3] << 24);
		}

		//} catch (Exception e) {
		//	e.printStackTrace();
		//}
		toneFilter_ = new ToneFilter(presetFilter.d1c785c, presetFilter.tone, presetFilter.gains, totalGain);
		dsFilter_ = new DelaySplitFilter(4159, presetFilter.gains, presetFilter.er_delays);
		er_ap1_ = new APFilter(Math.min(presetFilter.er_ap1_delay, 631), presetFilter.er_ap1_gain);
		er_ap2_ = new APFilter(Math.min(presetFilter.er_ap2_delay, 739), presetFilter.er_ap2_gain);
		var vbr1_delay = ((0xa3d * presetFilter.vbr1_delay) >> 12);
		ch1_ = new FilterChain();
		ch1_.add(new APFilter(Math.min(presetFilter.ap3_delay, 1933), presetFilter.ap3_gain));
		ch1_.add(new APFilter(Math.min(presetFilter.ap4_delay, 2843), presetFilter.ap4_gain));
		ch1_.add(new APFilter(Math.min(presetFilter.ap5_delay, 2053), presetFilter.ap5_gain));
		ch1_.add(new VbrFilter(Math.min(vbr1_delay, 2881), presetFilter.vbr1_gain, 0x14ce, 0x102));

		delay1_ = new DelayShiftFilter(Math.min(presetFilter.delay1_delay, 2837), presetFilter.delay1_gain, presetFilter.absorb, 12);

		var vbr2_delay = ((0xb1b * presetFilter.vbr2_delay) >> 12);
		ch2_ = new FilterChain();
		ch2_.add(new APFilter(Math.min(presetFilter.ap6_delay, 1637), presetFilter.ap6_gain));
		ch2_.add(new APFilter(Math.min(presetFilter.ap7_delay, 2749), presetFilter.ap7_gain));
		ch2_.add(new APFilter(Math.min(presetFilter.ap8_delay, 3079), presetFilter.ap8_gain));
		ch2_.add(new VbrFilter(Math.min(vbr2_delay, 3038), presetFilter.vbr2_gain, 0x17c6, 0xc0));

		delay2_ = new DelayShiftFilter(Math.min(presetFilter.delay2_delay, 2833), presetFilter.delay2_gain, presetFilter.absorb, 22);
	}


	public short[] filter(short lb, short rb)
	{
		var sum = (lb + rb) >> 2;

		var tone = toneFilter_.filter(sum);
		var temp  = dsFilter_.filter2(tone);

		var ap1 = er_ap1_.filter(temp[0]);
		var ap2 = er_ap2_.filter(temp[1]);

		var sec1in = ap1 - delay2_.last();
		var sec2in = ap2 + delay1_.last();

		var dr1 = delay1_.filter(ch1_.filter(sec1in));
		var dr2 = delay2_.filter(ch2_.filter(sec2in));

		var r1 = ((dr1 * presetGain_.r_gain + ap1 * presetGain_.er_gain) >> 12);
		var r2 = ((dr2 * presetGain_.r_gain + ap2 * presetGain_.er_gain) >> 12);

		r1 = (r1 + lb) >> 1;
		r2 = (r2 + rb) >> 1;

		r1 = Math.min(0x7FFF, Math.max(-0x8000, r1));
		r2 = Math.min(0x7FFF, Math.max(-0x8000, r2));

		return new short[] { (short) r1, (short) r2};
	}

	private static class PresetGain
	{
		//public int d_gain;
		public int er_gain;
		public int r_gain;
	}

	private static class FilterChain
	{
		public final void add(VFilter filter)
		{
			chain_.add(filter);
		}

		public final int filter(int in)
		{
			for (var f : chain_)
			{
				in = f.filter(in);
			}
			return in;
		}

		private ArrayList<VFilter> chain_ = new ArrayList<VFilter>();
	}

	private static class APFilter extends DelayFilter
	{
		public APFilter(int delay, int gain)
		{
			super(delay);
			this.gain_ = gain;
		}

		@Override
		public int filter(int in)
		{
			var last = delay_buff_.getLast();
			delay_buff_.removeLast();

			var first = in + ((gain_ * last + 0x800) >> 12);
			delay_buff_.addFirst(first);
			return last - (((gain_ * first) + 0x800) >> 12);
		}

		protected int gain_;
	}

	abstract private static class DelayFilter extends VFilter
	{
		public DelayFilter(int delay)
		{
			for (int i = 0; i < delay; i++)
				delay_buff_.add(0);
		}

		//using VFilter::filter;

		public void close()
		{
		}

		protected LinkedList<Integer> delay_buff_ = new LinkedList<Integer>();
	}

	private static class DelaySplitFilter extends DelayFilter
	{
		public DelaySplitFilter(int delay, int[] gains, int[] er_delays)
		{
			super(delay);
			gains_ = Globals.copy(gains);
			er_delays_ = Globals.copy(er_delays);
		}

		@Override
		public int filter(int in)
		{
			assert false;
			return 0;
		}

		public final int[] filter2(int in)
		{
			delay_buff_.removeLast();
			delay_buff_.addFirst(in);

			var l = (delay_buff_.get(er_delays_[0]) >> 1) + (delay_buff_.get(er_delays_[1])) 
				  + (delay_buff_.get(er_delays_[3]) >> 1) + (delay_buff_.get(er_delays_[5]) >> 1);
			var r = (delay_buff_.get(er_delays_[0]) >> 1) + (delay_buff_.get(er_delays_[2]))
			      + (delay_buff_.get(er_delays_[4]) >> 1) + (delay_buff_.get(er_delays_[6]) >> 1);

			return new int[] { l, r };
		}

		private int[] gains_ = new int[4];
		private int[] er_delays_ = new int[7];
	}

	private static class DelayShiftFilter extends DelayFilter
	{
		public DelayShiftFilter(int delay, int gain, int absorb, int out_shift)
		{
			super(delay);
			this.gain_ = gain;
			this.absorb_ = absorb;
			this.out_shift_ = out_shift;
			assert out_shift_ > 0;
		}

		public final int last()
		{
			var last = delay_buff_.getLast();
			return (last * gain_) >> 12;
		}

		@Override
		public int filter(int in)
		{
			delay_buff_.removeLast();

			flow_ += ((((in - flow_) * absorb_) + 0x800) >> 12);
			delay_buff_.addFirst(flow_);

			return delay_buff_.get(out_shift_ - 1);
		}

		private int flow_ = 0;
		private int gain_;
		private int absorb_;
		private int out_shift_;
	}

	private static class VbrFilter extends DelayFilter
	{
		public VbrFilter(int delay, int gain, int shift, int ggain)
		{
			super(delay + ggain + 3);
			this.shift_ = shift;
			this.gain_ = gain;
			this.ggain_ = ggain;
			this.vbr_delay_ = delay;
		}

		@Override
		public int filter(int in)
		{
			delay_buff_.removeLast();

			v66 += shift_;
			if (v66 > 0x20000000)
			{
				v66 = -0x20000000;
			}
			var pre_offset = (vbr_delay_ << 12) + ggain_ * (Math.abs(v66) >> 17);
			var offset = (pre_offset >> 12);
			/// ...
			// 0x20000000 >> 17 = 0x1000 ... ?
			var offset_s = 0x1000 - (pre_offset - (pre_offset >> 12 << 12));
			// notice off-by-one when using deque instead of circular buffer
			var data_2 = delay_buff_.get(Math.min(offset + 1, delay_buff_.size() - 1));
			var data_1 = delay_buff_.get(Math.min(offset, delay_buff_.size() - 1));
			v66_1 = data_2 + ((offset_s * data_1) >> 12) - ((offset_s * v66_1) >> 12);
			var y = v66_1 - ((in * gain_) >> 12);
			var first = in + ((y * gain_) >> 12);
			delay_buff_.addFirst(first);
			return y;
		}

		private int vbr_delay_;
		private int shift_;
		private int gain_;
		private int ggain_;
		private int v66 = 0;
		private int v66_1 = 0;
	}

	private static class ToneFilter
	{
		public ToneFilter(int d1c785c, int tone, int[] gains, int total_gain)
		{
			this.d1c785c_ = d1c785c;
			this.tone_ = tone;
			this.total_gain_ = total_gain;
			gains_ = Globals.copy(gains);
		}

		public final int filter(int in)
		{
			v_tone += ((in - v_tone) * tone_ + 0x800) >> 12;

			var v1 = v1_p * gains_[2] + v2_p * gains_[3] + ((long)v_tone << 12);
			var v2 = v1_p * gains_[0] + v2_p * gains_[1];

			v2_p = v1_p;
			v1_p = v1 >> 12;

			return (int)(((((v1 * d1c785c_ >> 12) + v2) >> 12) * total_gain_) >> 12);
		}

		private int total_gain_;
		private int tone_;
		private int d1c785c_;
		private int[] gains_ = new int[4];

		private int v_tone = 0;
		private long v1_p = 0;
		private long v2_p = 0;
	}

	private PresetGain presetGain_;

	private ToneFilter toneFilter_;
	private DelaySplitFilter dsFilter_;
	private APFilter er_ap1_;
	private APFilter er_ap2_;
	private FilterChain ch1_;
	private FilterChain ch2_;
	private DelayShiftFilter delay1_;
	private DelayShiftFilter delay2_;
}

class PresetFilter implements Serializable
{
	public int tone;
	public int absorb;
	public int d1c785c;
	public int[] gains = new int[4];
	public int[] er_delays = new int[7];
	public int er_ap1_delay;
	public int er_ap2_delay;
	public int ap3_delay;
	public int ap4_delay;
	public int ap5_delay;
	public int vbr1_delay;
	public int delay1_delay;
	public int ap6_delay;
	public int ap7_delay;
	public int ap8_delay;
	public int vbr2_delay;
	public int delay2_delay;
	public int er_ap1_gain;
	public int er_ap2_gain;
	public int ap3_gain;
	public int ap4_gain;
	public int ap5_gain;
	public int vbr1_gain;
	public int delay1_gain;
	public int ap6_gain;
	public int ap7_gain;
	public int ap8_gain;
	public int vbr2_gain;
	public int delay2_gain;
}

//

abstract class VFilter implements Closeable
{
	public void close()
	{
	}

	public abstract int filter(int in);
}

class Globals
{
	public static final byte[] preset_filters = {0x73, 0x0a, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0xf7, (byte)0xf0, (byte)0xff, (byte)0xff, 0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, (byte)0xbd, (byte)0xfa, (byte)0xff, (byte)0xff, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, (byte)0x89, 0x00, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, (byte)0xa3, 0x00, 0x00, 0x00, (byte)0xe5, 0x00, 0x00, 0x00, (byte)0xa3, 0x00, 0x00, 0x00, (byte)0xbf, 0x00, 0x00, 0x00, (byte)0xbf, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, (byte)0xb3, 0x00, 0x00, 0x00, (byte)0xb3, 0x00, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x5c, (byte)0xf9, (byte)0xff, (byte)0xff, 0x4b, (byte)0xfa, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xb9, (byte)0xf6, (byte)0xff, (byte)0xff, 0x33, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xdf, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xe9, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x66, 0x0e, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0x8d, (byte)0xec, (byte)0xff, (byte)0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00, (byte)0xe7, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0x9d, 0x00, 0x00, 0x00, (byte)0x9d, 0x00, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, (byte)0xc5, 0x00, 0x00, 0x00, (byte)0x9d, 0x00, 0x00, 0x00, (byte)0xbf, 0x00, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, (byte)0x89, 0x00, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, (byte)0xf1, 0x00, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x52, (byte)0xf9, (byte)0xff, (byte)0xff, 0x27, (byte)0xfa, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xa5, (byte)0xf6, (byte)0xff, (byte)0xff, 0x31, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xe3, (byte)0xfb, (byte)0xff, (byte)0xff, 0x03, (byte)0xfa, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xac, 0x0f, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0x94, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0xad, 0x00, 0x00, 0x00, (byte)0xad, 0x00, 0x00, 0x00, (byte)0xe3, 0x00, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, (byte)0xad, 0x00, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, (byte)0xf1, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0xf1, 0x00, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x47, (byte)0xf9, (byte)0xff, (byte)0xff, 0x18, (byte)0xfa, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xa4, (byte)0xf6, (byte)0xff, (byte)0xff, 0x23, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xd2, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xec, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x10, 0x0a, 0x00, 0x00, (byte)0xff, 0x07, 0x00, 0x00, (byte)0xdd, 0x0f, 0x00, 0x00, 0x08, (byte)0xf1, (byte)0xff, (byte)0xff, 0x4f, 0x05, 0x00, 0x00, (byte)0xf8, 0x0e, 0x00, 0x00, (byte)0xd5, (byte)0xfa, (byte)0xff, (byte)0xff, (byte)0xd3, 0x00, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, (byte)0xb3, 0x00, 0x00, 0x00, (byte)0x91, 0x01, 0x00, 0x00, (byte)0xc1, 0x01, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x49, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xe9, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x7a, (byte)0xf3, (byte)0xff, (byte)0xff, (byte)0xc2, (byte)0xf6, (byte)0xff, (byte)0xff, 0x58, (byte)0xf7, (byte)0xff, (byte)0xff, (byte)0xd4, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xde, 0x0d, 0x00, 0x00, 0x06, 0x0b, 0x00, 0x00, (byte)0xe3, 0x0f, 0x00, 0x00, (byte)0x9f, (byte)0xec, (byte)0xff, (byte)0xff, 0x21, 0x07, 0x00, 0x00, 0x61, 0x13, 0x00, 0x00, (byte)0xfc, (byte)0xf8, (byte)0xff, (byte)0xff, 0x25, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, (byte)0x91, 0x01, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, (byte)0x91, 0x01, 0x00, 0x00, (byte)0xcd, 0x01, 0x00, 0x00, (byte)0xc9, 0x01, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00, (byte)0xbb, 0x01, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x41, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xe0, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x87, (byte)0xf3, (byte)0xff, (byte)0xff, (byte)0xcc, (byte)0xf6, (byte)0xff, (byte)0xff, 0x54, (byte)0xf7, (byte)0xff, (byte)0xff, (byte)0xb2, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x18, 0x0f, 0x00, 0x00, (byte)0xff, 0x0b, 0x00, 0x00, (byte)0xe5, 0x0f, 0x00, 0x00, (byte)0xa6, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0x9b, 0x07, 0x00, 0x00, 0x5a, 0x14, 0x00, 0x00, (byte)0x80, (byte)0xf8, (byte)0xff, (byte)0xff, 0x37, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, (byte)0x99, 0x01, 0x00, 0x00, (byte)0x85, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, (byte)0x99, 0x01, 0x00, 0x00, (byte)0x89, 0x00, 0x00, 0x00, (byte)0xa3, 0x00, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, (byte)0xf7, 0x01, 0x00, 0x00, (byte)0xf3, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, (byte)0xdf, 0x01, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x48, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xe3, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x7b, (byte)0xf3, (byte)0xff, (byte)0xff, (byte)0xbc, (byte)0xf6, (byte)0xff, (byte)0xff, 0x57, (byte)0xf7, (byte)0xff, (byte)0xff, (byte)0xbd, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xad, 0x09, 0x00, 0x00, (byte)0xde, 0x07, 0x00, 0x00, (byte)0xba, 0x0f, 0x00, 0x00, 0x18, (byte)0xf1, (byte)0xff, (byte)0xff, 0x5a, 0x05, 0x00, 0x00, (byte)0xe8, 0x0e, 0x00, 0x00, (byte)0xec, (byte)0xfa, (byte)0xff, (byte)0xff, 0x33, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, (byte)0x8d, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, (byte)0x85, 0x01, 0x00, 0x00, (byte)0x83, 0x00, 0x00, 0x00, (byte)0x9d, 0x00, 0x00, 0x00, (byte)0xa5, 0x01, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, (byte)0xa5, 0x01, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, (byte)0x87, 0x02, 0x00, 0x00, (byte)0xd3, 0x01, 0x00, 0x00, (byte)0xcd, 0x01, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x7f, (byte)0xf4, (byte)0xff, (byte)0xff, 0x13, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xfb, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xe6, (byte)0xf5, (byte)0xff, (byte)0xff, 0x5d, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe7, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x55, 0x0d, 0x00, 0x00, (byte)0xd8, 0x0a, 0x00, 0x00, (byte)0xc6, 0x0f, 0x00, 0x00, (byte)0xb1, (byte)0xec, (byte)0xff, (byte)0xff, 0x29, 0x07, 0x00, 0x00, 0x4f, 0x13, 0x00, 0x00, 0x11, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0xa3, 0x01, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0xb5, 0x00, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, (byte)0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0x8a, (byte)0xf4, (byte)0xff, (byte)0xff, 0x16, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xf4, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xd4, (byte)0xf5, (byte)0xff, (byte)0xff, 0x72, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe3, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x83, 0x0e, 0x00, 0x00, (byte)0xce, 0x0b, 0x00, 0x00, (byte)0xc9, 0x0f, 0x00, 0x00, (byte)0xb8, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xa2, 0x07, 0x00, 0x00, 0x48, 0x14, 0x00, 0x00, (byte)0x95, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0xc1, 0x01, 0x00, 0x00, (byte)0xc1, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, (byte)0xc1, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, (byte)0xc5, 0x00, 0x00, 0x00, (byte)0xe9, 0x00, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0xd7, 0x02, 0x00, 0x00, (byte)0xd7, 0x02, 0x00, 0x00, (byte)0x85, 0x01, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, (byte)0xcb, 0x03, 0x00, 0x00, (byte)0xbd, 0x02, 0x00, 0x00, (byte)0xb3, 0x02, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x7e, (byte)0xf4, (byte)0xff, (byte)0xff, 0x0e, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xf1, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xe1, (byte)0xf5, (byte)0xff, (byte)0xff, 0x5d, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe8, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x4a, 0x09, 0x00, 0x00, (byte)0xbd, 0x07, 0x00, 0x00, (byte)0x98, 0x0f, 0x00, 0x00, 0x29, (byte)0xf1, (byte)0xff, (byte)0xff, 0x65, 0x05, 0x00, 0x00, (byte)0xd7, 0x0e, 0x00, 0x00, 0x04, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0x8d, 0x01, 0x00, 0x00, (byte)0x8d, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, (byte)0x8d, 0x01, 0x00, 0x00, (byte)0xcf, 0x01, 0x00, 0x00, (byte)0xfd, 0x01, 0x00, 0x00, (byte)0xad, 0x00, 0x00, 0x00, (byte)0xd3, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, (byte)0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0xf5, 0x02, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x37, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xbf, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xc6, (byte)0xf2, (byte)0xff, (byte)0xff, 0x70, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xfb, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x92, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, 0x0c, 0x00, 0x00, (byte)0xab, 0x0a, 0x00, 0x00, (byte)0xa9, 0x0f, 0x00, 0x00, (byte)0xc3, (byte)0xec, (byte)0xff, (byte)0xff, 0x30, 0x07, 0x00, 0x00, 0x3d, 0x13, 0x00, 0x00, 0x27, (byte)0xf9, (byte)0xff, (byte)0xff, 0x1d, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0xc5, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0x81, 0x02, 0x00, 0x00, (byte)0xc5, 0x02, 0x00, 0x00, (byte)0xef, 0x00, 0x00, 0x00, 0x19, 0x01, 0x00, 0x00, (byte)0xf5, 0x02, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, (byte)0xf5, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, (byte)0xd3, 0x01, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, (byte)0x93, 0x04, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x2a, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xb7, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xb7, (byte)0xf2, (byte)0xff, (byte)0xff, 0x77, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xf7, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x8b, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xef, 0x0d, 0x00, 0x00, (byte)0x9c, 0x0b, 0x00, 0x00, (byte)0xae, 0x0f, 0x00, 0x00, (byte)0xca, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xa9, 0x07, 0x00, 0x00, 0x36, 0x14, 0x00, 0x00, (byte)0xa9, (byte)0xf8, (byte)0xff, (byte)0xff, 0x4b, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, (byte)0xdd, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, (byte)0xbd, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, (byte)0x9d, 0x04, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, (byte)0xb9, 0x03, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, (byte)0xfd, 0x01, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, (byte)0xfd, 0x04, 0x00, 0x00, (byte)0x97, 0x03, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x2d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xb6, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xb8, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0x80, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xf9, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x92, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xe7, 0x08, 0x00, 0x00, (byte)0x9c, 0x07, 0x00, 0x00, 0x76, 0x0f, 0x00, 0x00, 0x3a, (byte)0xf1, (byte)0xff, (byte)0xff, 0x6f, 0x05, 0x00, 0x00, (byte)0xc6, 0x0e, 0x00, 0x00, 0x1b, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xe7, 0x01, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, (byte)0x81, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, (byte)0xe7, 0x01, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0xdf, 0x00, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, (byte)0xab, 0x02, 0x00, 0x00, (byte)0xcb, 0x03, 0x00, 0x00, (byte)0xab, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, (byte)0xa9, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, (byte)0xf5, 0x02, 0x00, 0x00, (byte)0xe7, 0x02, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x02, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x86, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x98, (byte)0xf2, (byte)0xff, (byte)0xff, 0x3b, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xba, (byte)0xf5, (byte)0xff, (byte)0xff, 0x61, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x44, 0x0c, 0x00, 0x00, 0x7d, 0x0a, 0x00, 0x00, (byte)0x8d, 0x0f, 0x00, 0x00, (byte)0xd5, (byte)0xec, (byte)0xff, (byte)0xff, 0x37, 0x07, 0x00, 0x00, 0x2b, 0x13, 0x00, 0x00, 0x3c, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0xa1, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0xa9, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, (byte)0xa9, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, (byte)0xa7, 0x05, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xfe, (byte)0xf3, (byte)0xff, (byte)0xff, (byte)0x88, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x98, (byte)0xf2, (byte)0xff, (byte)0xff, 0x39, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xbb, (byte)0xf5, (byte)0xff, (byte)0xff, 0x5d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x5a, 0x0d, 0x00, 0x00, 0x6b, 0x0b, 0x00, 0x00, (byte)0x93, 0x0f, 0x00, 0x00, (byte)0xdc, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xaf, 0x07, 0x00, 0x00, 0x24, 0x14, 0x00, 0x00, (byte)0xbe, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0xd7, 0x02, 0x00, 0x00, (byte)0xd7, 0x02, 0x00, 0x00, (byte)0xb9, 0x03, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, (byte)0xd7, 0x02, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, (byte)0xfb, 0x03, 0x00, 0x00, (byte)0xab, 0x05, 0x00, 0x00, (byte)0xfb, 0x03, 0x00, 0x00, (byte)0x9d, 0x04, 0x00, 0x00, (byte)0x93, 0x04, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0x81, 0x05, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xfe, (byte)0xf3, (byte)0xff, (byte)0xff, (byte)0x87, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x9b, (byte)0xf2, (byte)0xff, (byte)0xff, 0x3d, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0xb8, (byte)0xf5, (byte)0xff, (byte)0xff, 0x5b, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x84, 0x08, 0x00, 0x00, 0x7b, 0x07, 0x00, 0x00, 0x54, 0x0f, 0x00, 0x00, 0x4b, (byte)0xf1, (byte)0xff, (byte)0xff, 0x79, 0x05, 0x00, 0x00, (byte)0xb5, 0x0e, 0x00, 0x00, 0x33, (byte)0xfb, (byte)0xff, (byte)0xff, 0x41, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, (byte)0xf5, 0x02, 0x00, 0x00, (byte)0xcf, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, (byte)0xab, 0x02, 0x00, 0x00, (byte)0xef, 0x02, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, (byte)0x81, 0x04, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, (byte)0xa9, 0x03, 0x00, 0x00, (byte)0xa1, 0x03, 0x00, 0x00, (byte)0xf3, 0x01, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, (byte)0xe1, 0x04, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, 0x73, 0x03, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe1, (byte)0xf3, (byte)0xff, (byte)0xff, 0x67, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x85, (byte)0xf2, (byte)0xff, (byte)0xff, 0x18, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x94, (byte)0xf5, (byte)0xff, (byte)0xff, 0x48, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xbc, 0x0b, 0x00, 0x00, 0x50, 0x0a, 0x00, 0x00, 0x71, 0x0f, 0x00, 0x00, (byte)0xe7, (byte)0xec, (byte)0xff, (byte)0xff, 0x3e, 0x07, 0x00, 0x00, 0x19, 0x13, 0x00, 0x00, 0x52, (byte)0xf9, (byte)0xff, (byte)0xff, 0x1d, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, (byte)0xdf, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, (byte)0xad, 0x03, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00, (byte)0xff, 0x04, 0x00, 0x00, (byte)0xb3, 0x02, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, (byte)0xb9, 0x06, 0x00, 0x00, (byte)0xd5, 0x04, 0x00, 0x00, (byte)0xc1, 0x04, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe3, (byte)0xf3, (byte)0xff, (byte)0xff, 0x65, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x88, (byte)0xf2, (byte)0xff, (byte)0xff, 0x1b, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x94, (byte)0xf5, (byte)0xff, (byte)0xff, 0x3e, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xc5, 0x0c, 0x00, 0x00, 0x39, 0x0b, 0x00, 0x00, 0x78, 0x0f, 0x00, 0x00, (byte)0xee, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xb5, 0x07, 0x00, 0x00, 0x12, 0x14, 0x00, 0x00, (byte)0xd3, (byte)0xf8, (byte)0xff, (byte)0xff, 0x5f, 0x03, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, (byte)0xc1, 0x01, 0x00, 0x00, (byte)0xbd, 0x04, 0x00, 0x00, (byte)0xc5, 0x06, 0x00, 0x00, (byte)0xbd, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, (byte)0xef, 0x02, 0x00, 0x00, (byte)0x9d, 0x06, 0x00, 0x00, 0x4f, 0x07, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xe1, (byte)0xf3, (byte)0xff, (byte)0xff, 0x62, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x87, (byte)0xf2, (byte)0xff, (byte)0xff, 0x24, (byte)0xf5, (byte)0xff, (byte)0xff, (byte)0x93, (byte)0xf5, (byte)0xff, (byte)0xff, 0x48, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x21, 0x08, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 0x5c, (byte)0xf1, (byte)0xff, (byte)0xff, (byte)0x83, 0x05, 0x00, 0x00, (byte)0xa4, 0x0e, 0x00, 0x00, 0x4b, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xa1, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0xad, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, (byte)0xad, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, (byte)0xa7, 0x05, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xd0, (byte)0xf3, (byte)0xff, (byte)0xff, 0x51, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x7f, (byte)0xf2, (byte)0xff, (byte)0xff, 0x01, (byte)0xf5, (byte)0xff, (byte)0xff, 0x78, (byte)0xf5, (byte)0xff, (byte)0xff, 0x27, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x33, 0x0b, 0x00, 0x00, 0x22, 0x0a, 0x00, 0x00, 0x55, 0x0f, 0x00, 0x00, (byte)0xfa, (byte)0xec, (byte)0xff, (byte)0xff, 0x44, 0x07, 0x00, 0x00, 0x06, 0x13, 0x00, 0x00, 0x67, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0x97, 0x03, 0x00, 0x00, (byte)0x97, 0x03, 0x00, 0x00, (byte)0xbd, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, (byte)0xa1, 0x03, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, (byte)0xb1, 0x04, 0x00, 0x00, (byte)0x99, 0x01, 0x00, 0x00, (byte)0xdf, 0x01, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, (byte)0xd5, 0x05, 0x00, 0x00, (byte)0xcb, 0x05, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, (byte)0xf7, 0x06, 0x00, 0x00, (byte)0xc9, 0x07, 0x00, 0x00, (byte)0x99, 0x05, 0x00, 0x00, (byte)0x8f, 0x05, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xd0, (byte)0xf3, (byte)0xff, (byte)0xff, 0x4d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x7f, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xfe, (byte)0xf4, (byte)0xff, (byte)0xff, 0x78, (byte)0xf5, (byte)0xff, (byte)0xff, 0x27, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x31, 0x0c, 0x00, 0x00, 0x08, 0x0b, 0x00, 0x00, 0x5e, 0x0f, 0x00, 0x00, 0x00, (byte)0xec, (byte)0xff, (byte)0xff, (byte)0xba, 0x07, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, (byte)0xe8, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0xf1, 0x03, 0x00, 0x00, (byte)0xf1, 0x03, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, (byte)0xe1, 0x04, 0x00, 0x00, (byte)0xf1, 0x03, 0x00, 0x00, (byte)0xa3, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, (byte)0x81, 0x05, 0x00, 0x00, (byte)0xdb, 0x07, 0x00, 0x00, (byte)0x81, 0x05, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, (byte)0x9d, 0x07, 0x00, 0x00, (byte)0x83, 0x08, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xce, (byte)0xf3, (byte)0xff, (byte)0xff, 0x4f, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x7d, (byte)0xf2, (byte)0xff, (byte)0xff, 0x03, (byte)0xf5, (byte)0xff, (byte)0xff, 0x7d, (byte)0xf5, (byte)0xff, (byte)0xff, 0x27, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xbd, 0x07, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00, 0x11, 0x0f, 0x00, 0x00, 0x6d, (byte)0xf1, (byte)0xff, (byte)0xff, (byte)0x8c, 0x05, 0x00, 0x00, (byte)0x93, 0x0e, 0x00, 0x00, 0x63, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xf9, 0x02, 0x00, 0x00, (byte)0xf9, 0x02, 0x00, 0x00, (byte)0xf1, 0x03, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, (byte)0xf9, 0x02, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, (byte)0xdf, 0x03, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, (byte)0x8d, 0x01, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, (byte)0xf3, 0x05, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, (byte)0xd5, 0x04, 0x00, 0x00, (byte)0xcd, 0x04, 0x00, 0x00, (byte)0x93, 0x02, 0x00, 0x00, (byte)0xbf, 0x05, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, (byte)0xa3, 0x04, 0x00, 0x00, (byte)0x93, 0x04, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xc0, (byte)0xf3, (byte)0xff, (byte)0xff, 0x40, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x6e, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xeb, (byte)0xf4, (byte)0xff, (byte)0xff, 0x6c, (byte)0xf5, (byte)0xff, (byte)0xff, 0x1b, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xab, 0x0a, 0x00, 0x00, (byte)0xf5, 0x09, 0x00, 0x00, 0x39, 0x0f, 0x00, 0x00, 0x0c, (byte)0xed, (byte)0xff, (byte)0xff, 0x4a, 0x07, 0x00, 0x00, (byte)0xf4, 0x12, 0x00, 0x00, 0x7d, (byte)0xf9, (byte)0xff, (byte)0xff, 0x19, 0x04, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, (byte)0xe1, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, (byte)0xcd, 0x01, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, (byte)0xc9, 0x05, 0x00, 0x00, 0x33, 0x08, 0x00, 0x00, (byte)0xc9, 0x05, 0x00, 0x00, (byte)0xa3, 0x06, 0x00, 0x00, (byte)0x9d, 0x06, 0x00, 0x00, (byte)0x8f, 0x03, 0x00, 0x00, (byte)0xed, 0x07, 0x00, 0x00, (byte)0xdb, 0x08, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xc4, (byte)0xf3, (byte)0xff, (byte)0xff, 0x3d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x6f, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xec, (byte)0xf4, (byte)0xff, (byte)0xff, 0x64, (byte)0xf5, (byte)0xff, (byte)0xff, 0x1b, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x9c, 0x0b, 0x00, 0x00, (byte)0xd6, 0x0a, 0x00, 0x00, 0x43, 0x0f, 0x00, 0x00, 0x12, (byte)0xec, (byte)0xff, (byte)0xff, (byte)0xc0, 0x07, 0x00, 0x00, (byte)0xee, 0x13, 0x00, 0x00, (byte)0xfd, (byte)0xf8, (byte)0xff, (byte)0xff, 0x7f, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, (byte)0xdb, 0x05, 0x00, 0x00, (byte)0x8f, 0x05, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, (byte)0xcf, 0x05, 0x00, 0x00, (byte)0xf7, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, (byte)0xef, 0x08, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, (byte)0xdf, 0x03, 0x00, 0x00, (byte)0x9f, 0x08, 0x00, 0x00, (byte)0xa9, 0x09, 0x00, 0x00, (byte)0xf1, 0x06, 0x00, 0x00, (byte)0xd9, 0x06, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xc1, (byte)0xf3, (byte)0xff, (byte)0xff, 0x43, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x6f, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xeb, (byte)0xf4, (byte)0xff, (byte)0xff, 0x66, (byte)0xf5, (byte)0xff, (byte)0xff, 0x19, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x5a, 0x07, 0x00, 0x00, 0x18, 0x07, 0x00, 0x00, (byte)0xf0, 0x0e, 0x00, 0x00, 0x7e, (byte)0xf1, (byte)0xff, (byte)0xff, (byte)0x95, 0x05, 0x00, 0x00, (byte)0x82, 0x0e, 0x00, 0x00, 0x7b, (byte)0xfb, (byte)0xff, (byte)0xff, 0x55, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, (byte)0xf5, 0x03, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, (byte)0xbb, 0x01, 0x00, 0x00, (byte)0xb1, 0x04, 0x00, 0x00, (byte)0xad, 0x06, 0x00, 0x00, (byte)0xb1, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, (byte)0xe3, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xb6, (byte)0xf3, (byte)0xff, (byte)0xff, 0x3c, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x66, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xe2, (byte)0xf4, (byte)0xff, (byte)0xff, 0x57, (byte)0xf5, (byte)0xff, (byte)0xff, 0x0c, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x22, 0x0a, 0x00, 0x00, (byte)0xc7, 0x09, 0x00, 0x00, 0x1d, 0x0f, 0x00, 0x00, 0x1e, (byte)0xed, (byte)0xff, (byte)0xff, 0x50, 0x07, 0x00, 0x00, (byte)0xe2, 0x12, 0x00, 0x00, (byte)0x93, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0x9d, 0x04, 0x00, 0x00, (byte)0x9d, 0x04, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, (byte)0xbf, 0x05, 0x00, 0x00, (byte)0x9d, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, (byte)0xfb, 0x05, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x35, 0x09, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x73, 0x07, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00, (byte)0xfb, 0x03, 0x00, 0x00, (byte)0xe9, 0x08, 0x00, 0x00, (byte)0xef, 0x09, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x13, 0x07, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xb7, (byte)0xf3, (byte)0xff, (byte)0xff, 0x32, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x66, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xe1, (byte)0xf4, (byte)0xff, (byte)0xff, 0x56, (byte)0xf5, (byte)0xff, (byte)0xff, 0x0d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x08, 0x0b, 0x00, 0x00, (byte)0xa4, 0x0a, 0x00, 0x00, 0x29, 0x0f, 0x00, 0x00, 0x25, (byte)0xec, (byte)0xff, (byte)0xff, (byte)0xc5, 0x07, 0x00, 0x00, (byte)0xdb, 0x13, 0x00, 0x00, 0x12, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0xfd, 0x04, 0x00, 0x00, (byte)0xfd, 0x04, 0x00, 0x00, (byte)0x9d, 0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, (byte)0xff, 0x04, 0x00, 0x00, (byte)0xf3, 0x05, 0x00, 0x00, (byte)0x83, 0x06, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, (byte)0xa1, 0x02, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x13, 0x0a, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, (byte)0xad, 0x09, 0x00, 0x00, (byte)0xd9, 0x0a, 0x00, 0x00, (byte)0xc9, 0x07, 0x00, 0x00, (byte)0xb5, 0x07, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xb6, (byte)0xf3, (byte)0xff, (byte)0xff, 0x34, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x66, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xdf, (byte)0xf4, (byte)0xff, (byte)0xff, 0x59, (byte)0xf5, (byte)0xff, (byte)0xff, 0x0d, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xf7, 0x06, 0x00, 0x00, (byte)0xf7, 0x06, 0x00, 0x00, (byte)0xcf, 0x0e, 0x00, 0x00, (byte)0x8f, (byte)0xf1, (byte)0xff, (byte)0xff, (byte)0x9e, 0x05, 0x00, 0x00, 0x71, 0x0e, 0x00, 0x00, (byte)0x93, (byte)0xfb, (byte)0xff, (byte)0xff, (byte)0xb3, 0x03, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, (byte)0xe1, 0x04, 0x00, 0x00, (byte)0x9d, 0x04, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, (byte)0xcf, 0x04, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, (byte)0xeb, 0x01, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, (byte)0xf3, 0x05, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, (byte)0xbf, 0x05, 0x00, 0x00, (byte)0xab, 0x05, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xc0, (byte)0xf3, (byte)0xff, (byte)0xff, 0x2e, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x62, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xd4, (byte)0xf4, (byte)0xff, (byte)0xff, 0x4e, (byte)0xf5, (byte)0xff, (byte)0xff, 0x03, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0x9a, 0x09, 0x00, 0x00, (byte)0x9a, 0x09, 0x00, 0x00, 0x02, 0x0f, 0x00, 0x00, 0x31, (byte)0xed, (byte)0xff, (byte)0xff, 0x55, 0x07, 0x00, 0x00, (byte)0xcf, 0x12, 0x00, 0x00, (byte)0xa9, (byte)0xf9, (byte)0xff, (byte)0xff, 0x15, 0x05, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, (byte)0xad, 0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, (byte)0xa1, 0x06, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, (byte)0xa5, 0x02, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x33, 0x08, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, (byte)0xd9, 0x09, 0x00, 0x00, 0x03, 0x0b, 0x00, 0x00, (byte)0xeb, 0x07, 0x00, 0x00, (byte)0xcf, 0x07, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xac, (byte)0xf3, (byte)0xff, (byte)0xff, 0x27, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x60, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xd3, (byte)0xf4, (byte)0xff, (byte)0xff, 0x4a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x03, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x73, 0x0a, 0x00, 0x00, 0x73, 0x0a, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x37, (byte)0xec, (byte)0xff, (byte)0xff, (byte)0xc9, 0x07, 0x00, 0x00, (byte)0xc9, 0x13, 0x00, 0x00, 0x28, (byte)0xf9, (byte)0xff, (byte)0xff, (byte)0x8f, 0x05, 0x00, 0x00, (byte)0x8f, 0x05, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00, (byte)0xf1, 0x06, 0x00, 0x00, (byte)0x8f, 0x05, 0x00, 0x00, (byte)0x9d, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0xe3, 0x02, 0x00, 0x00, (byte)0xc9, 0x07, 0x00, 0x00, 0x1b, 0x0b, 0x00, 0x00, (byte)0xc9, 0x07, 0x00, 0x00, (byte)0xf9, 0x08, 0x00, 0x00, (byte)0xef, 0x08, 0x00, 0x00, (byte)0xcd, 0x04, 0x00, 0x00, (byte)0xbd, 0x0a, 0x00, 0x00, 0x07, 0x0c, 0x00, 0x00, (byte)0x9f, 0x08, 0x00, 0x00, (byte)0x83, 0x08, 0x00, 0x00, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xac, (byte)0xf3, (byte)0xff, (byte)0xff, 0x27, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x60, (byte)0xf2, (byte)0xff, (byte)0xff, (byte)0xd5, (byte)0xf4, (byte)0xff, (byte)0xff, 0x4e, (byte)0xf5, (byte)0xff, (byte)0xff, 0x03, (byte)0xf4, (byte)0xff, (byte)0xff, (byte)0xcd, (byte)0xf4, (byte)0xff, (byte)0xff, 0x73, 0x0a, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0xf7, (byte)0xf0, (byte)0xff, (byte)0xff, 0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, (byte)0xbd, (byte)0xfa, (byte)0xff, (byte)0xff, 0x43, 0x00, 0x00, 0x00, (byte)0xad, 0x00, 0x00, 0x00, (byte)0xfb, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, (byte)0xf3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 0x7f, 0x01, 0x00, 0x00, (byte)0xf3, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, (byte)0xcd, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x00, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0x9a, (byte)0xf9, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, 0x0e, 0x00, 0x00, (byte)0xcd, 0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0x8d, (byte)0xec, (byte)0xff, (byte)0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00, (byte)0xe7, (byte)0xf8, (byte)0xff, (byte)0xff, 0x61, 0x00, 0x00, 0x00, (byte)0xef, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, (byte)0x91, 0x01, 0x00, 0x00, (byte)0xa5, 0x01, 0x00, 0x00, (byte)0xab, 0x02, 0x00, 0x00, (byte)0xe7, 0x02, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, (byte)0xaf, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0xab, 0x02, 0x00, 0x00, (byte)0xc5, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, (byte)0x99, 0x01, 0x00, 0x00, (byte)0xf3, 0x01, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, (byte)0xc5, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x00, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0x9a, (byte)0xf9, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xac, 0x0f, 0x00, 0x00, (byte)0xef, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0x94, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, (byte)0xf8, (byte)0xff, (byte)0xff, 0x65, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, (byte)0xcd, 0x01, 0x00, 0x00, (byte)0xe7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, (byte)0xdf, 0x01, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, (byte)0xe3, 0x02, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, (byte)0xb7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0xb3, 0x02, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x00, (byte)0xf8, (byte)0xff, (byte)0xff, (byte)0x9a, (byte)0xf9, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x4a, 0x09, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x65, 0x0f, 0x00, 0x00, 0x42, (byte)0xf1, (byte)0xff, (byte)0xff, 0x74, 0x05, 0x00, 0x00, (byte)0xbe, 0x0e, 0x00, 0x00, 0x27, (byte)0xfb, (byte)0xff, (byte)0xff, 0x43, 0x00, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, (byte)0xaf, 0x01, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, (byte)0x81, 0x05, 0x00, 0x00, (byte)0xab, 0x0a, 0x00, 0x00, (byte)0xd9, 0x0a, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, (byte)0xef, 0x02, 0x00, 0x00, (byte)0x8b, 0x03, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, (byte)0xfb, 0x05, 0x00, 0x00, (byte)0x9d, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, (byte)0xb3, 0x03, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, (byte)0xb3, 0x05, 0x00, 0x00, (byte)0xcd, 0x06, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xcd, 0x0c, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00, 0x7f, 0x0f, 0x00, 0x00, (byte)0xde, (byte)0xec, (byte)0xff, (byte)0xff, 0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00, 0x47, (byte)0xf9, (byte)0xff, (byte)0xff, 0x61, 0x00, 0x00, 0x00, (byte)0xa3, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, (byte)0x8d, 0x07, 0x00, 0x00, (byte)0xb7, 0x0e, 0x00, 0x00, (byte)0xef, 0x0e, 0x00, 0x00, (byte)0x83, 0x00, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, (byte)0xcd, 0x04, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x05, 0x09, 0x00, 0x00, (byte)0xbd, 0x04, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, (byte)0x99, 0x05, 0x00, 0x00, (byte)0xdb, 0x07, 0x00, 0x00, 0x5f, 0x09, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xef, 0x0d, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00, (byte)0x86, 0x0f, 0x00, 0x00, (byte)0xe5, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00, (byte)0xc8, (byte)0xf8, (byte)0xff, (byte)0xff, 0x65, 0x00, 0x00, 0x00, (byte)0xc1, 0x01, 0x00, 0x00, (byte)0x87, 0x02, 0x00, 0x00, (byte)0x9d, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x03, 0x10, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00, (byte)0x95, 0x00, 0x00, 0x00, (byte)0x9d, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, (byte)0xb9, 0x06, 0x00, 0x00, (byte)0xf9, 0x08, 0x00, 0x00, (byte)0xd9, 0x09, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, (byte)0x8f, 0x05, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, (byte)0x9b, 0x08, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, (byte)0xb5, 0x08, 0x00, 0x00, (byte)0x8c, 0x07, 0x00, 0x00, 0x65, 0x0f, 0x00, 0x00, 0x42, (byte)0xf1, (byte)0xff, (byte)0xff, 0x74, 0x05, 0x00, 0x00, (byte)0xbe, 0x0e, 0x00, 0x00, 0x27, (byte)0xfb, (byte)0xff, (byte)0xff, 0x49, 0x00, 0x00, 0x00, (byte)0xd7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, (byte)0xeb, 0x07, 0x00, 0x00, 0x51, 0x08, 0x00, 0x00, (byte)0x89, 0x09, 0x00, 0x00, (byte)0xd9, 0x0a, 0x00, 0x00, (byte)0x85, 0x01, 0x00, 0x00, (byte)0xd3, 0x01, 0x00, 0x00, (byte)0xc7, 0x03, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, (byte)0xd3, 0x06, 0x00, 0x00, 0x61, 0x07, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, (byte)0xa3, 0x04, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00, 0x61, 0x07, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x00, 0x0c, 0x00, 0x00, 0x66, 0x0a, 0x00, 0x00, 0x7f, 0x0f, 0x00, 0x00, (byte)0xde, (byte)0xec, (byte)0xff, (byte)0xff, 0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00, 0x47, (byte)0xf9, (byte)0xff, (byte)0xff, 0x65, 0x00, 0x00, 0x00, (byte)0xf1, 0x03, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00, (byte)0xe7, 0x0a, 0x00, 0x00, 0x7b, 0x0b, 0x00, 0x00, 0x2b, 0x0d, 0x00, 0x00, (byte)0xef, 0x0e, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, (byte)0x87, 0x02, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, (byte)0xfb, 0x05, 0x00, 0x00, 0x57, 0x07, 0x00, 0x00, 0x6b, 0x09, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, (byte)0xe7, 0x05, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x10, 0x0d, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, (byte)0x86, 0x0f, 0x00, 0x00, (byte)0xe5, (byte)0xeb, (byte)0xff, (byte)0xff, (byte)0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00, (byte)0xc8, (byte)0xf8, (byte)0xff, (byte)0xff, 0x6d, 0x00, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, (byte)0xb1, 0x04, 0x00, 0x00, (byte)0xdd, 0x0b, 0x00, 0x00, 0x77, 0x0c, 0x00, 0x00, 0x4b, 0x0e, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, (byte)0xbd, 0x02, 0x00, 0x00, (byte)0xab, 0x05, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0x3d, 0x0a, 0x00, 0x00, 0x15, 0x0b, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, (byte)0xb5, 0x07, 0x00, 0x00, (byte)0xf1, 0x06, 0x00, 0x00, 0x1b, 0x0b, 0x00, 0x00, 0x11, 0x0b, 0x00, 0x00, (byte)0x9a, (byte)0xf5, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff, 0x66, (byte)0xf6, (byte)0xff, (byte)0xff};

	public static final byte[] preset_gains = {
   (byte)0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    (byte)0x66, 0x0e, 0x00, 0x00, (byte)0xef, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    (byte)0x77, 0x0f, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    (byte)0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, (byte)0x89, 0x10, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    (byte)0x66, 0x0e, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    (byte)0x9a, 0x11, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x22, 0x12, 0x00, 0x00,
    (byte)0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, (byte)0xab, 0x12, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    (byte)0x66, 0x0e, 0x00, 0x00, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, (byte)0x9a, 0x11, 0x00, 0x00,
    (byte)0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, (byte)0x9a, 0x11, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00,
    (byte)0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x29, 0x0c, 0x00, 0x00
};
	public static final int[] total_gains = {0x0, 0x19a, 0x333, 0x4cd, 0x666, 0x800, 0x99a, 0xb33, 0xccd, 0xe66, 0x1000};
	/*public static <T> void copy(T[] d, T[] s)
	{
		d = Arrays.copyOf(s, s.length);
	}*/
	public static int[] copy(int[] s)
	{
		return Arrays.copyOf(s, s.length);
	}

	public static Object getObject(byte[] byteArr)
	throws IOException, ClassNotFoundException {
			if (Objects.nonNull(byteArr)) {
System.out.println(byteArr.length);
				ByteArrayInputStream bis = new ByteArrayInputStream(byteArr);
System.out.println(byteArr.length);
				ObjectInput in = new ObjectInputStream(bis);
System.out.println(byteArr.length);
			return in.readObject();
		}
		return null;
	}

}

//Helper class added by C++ to Java Converter:

//package tangible;

//----------------------------------------------------------------------------------------
//	Copyright © 2006 - 2022 Tangible Software Solutions, Inc.
//	This class can be used by anyone provided that the copyright notice remains intact.
//
//	This class is used to replicate the ability to pass arguments by reference in Java.
//----------------------------------------------------------------------------------------
