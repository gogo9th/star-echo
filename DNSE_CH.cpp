#include <utility>
#include <iterator>
#include <array>
#include <deque>
#include <vector>


#include "q2cathedral.h"
#include "DNSE_CH.h"
#include "utils.h"

static const uint8_t preset_filters[] = {
    0x73, 0x0a, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xf7, 0xf0, 0xff, 0xff,
    0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, 0xbd, 0xfa, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
    0x7f, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00,
    0x89, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
    0xa3, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,
    0xbf, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
    0xb3, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x5c, 0xf9, 0xff, 0xff, 0x4b, 0xfa, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0xb9, 0xf6, 0xff, 0xff, 0x33, 0xfb, 0xff, 0xff, 0xdf, 0xfb, 0xff, 0xff,
    0xe9, 0xf9, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x66, 0x0e, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x8d, 0xec, 0xff, 0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00,
    0xe7, 0xf8, 0xff, 0xff, 0x9d, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
    0xc5, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
    0x47, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00,
    0xdf, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00,
    0x33, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x52, 0xf9, 0xff, 0xff, 0x27, 0xfa, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xa5, 0xf6, 0xff, 0xff,
    0x31, 0xfb, 0xff, 0xff, 0xe3, 0xfb, 0xff, 0xff, 0x03, 0xfa, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xac, 0x0f, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x94, 0xeb, 0xff, 0xff,
    0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, 0xf8, 0xff, 0xff, 0xad, 0x00, 0x00, 0x00,
    0xad, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00,
    0xd3, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
    0xf1, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00,
    0x15, 0x01, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00,
    0x0d, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x47, 0xf9, 0xff, 0xff, 0x18, 0xfa, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0xa4, 0xf6, 0xff, 0xff, 0x23, 0xfb, 0xff, 0xff, 0xd2, 0xfb, 0xff, 0xff,
    0xec, 0xf9, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x10, 0x0a, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00,
    0xdd, 0x0f, 0x00, 0x00, 0x08, 0xf1, 0xff, 0xff, 0x4f, 0x05, 0x00, 0x00, 0xf8, 0x0e, 0x00, 0x00,
    0xd5, 0xfa, 0xff, 0xff, 0xd3, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
    0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00,
    0x25, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00,
    0x91, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x49, 0xf5, 0xff, 0xff, 0xe9, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7a, 0xf3, 0xff, 0xff,
    0xc2, 0xf6, 0xff, 0xff, 0x58, 0xf7, 0xff, 0xff, 0xd4, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xde, 0x0d, 0x00, 0x00, 0x06, 0x0b, 0x00, 0x00, 0xe3, 0x0f, 0x00, 0x00, 0x9f, 0xec, 0xff, 0xff,
    0x21, 0x07, 0x00, 0x00, 0x61, 0x13, 0x00, 0x00, 0xfc, 0xf8, 0xff, 0xff, 0x25, 0x01, 0x00, 0x00,
    0x25, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00,
    0x51, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
    0x91, 0x01, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
    0xc9, 0x01, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x69, 0x02, 0x00, 0x00,
    0xbb, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x41, 0xf5, 0xff, 0xff, 0xe0, 0xf5, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x87, 0xf3, 0xff, 0xff, 0xcc, 0xf6, 0xff, 0xff, 0x54, 0xf7, 0xff, 0xff,
    0xb2, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x18, 0x0f, 0x00, 0x00, 0xff, 0x0b, 0x00, 0x00,
    0xe5, 0x0f, 0x00, 0x00, 0xa6, 0xeb, 0xff, 0xff, 0x9b, 0x07, 0x00, 0x00, 0x5a, 0x14, 0x00, 0x00,
    0x80, 0xf8, 0xff, 0xff, 0x37, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
    0x85, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
    0x89, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00,
    0xb7, 0x01, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
    0x57, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x48, 0xf5, 0xff, 0xff, 0xe3, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7b, 0xf3, 0xff, 0xff,
    0xbc, 0xf6, 0xff, 0xff, 0x57, 0xf7, 0xff, 0xff, 0xbd, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xad, 0x09, 0x00, 0x00, 0xde, 0x07, 0x00, 0x00, 0xba, 0x0f, 0x00, 0x00, 0x18, 0xf1, 0xff, 0xff,
    0x5a, 0x05, 0x00, 0x00, 0xe8, 0x0e, 0x00, 0x00, 0xec, 0xfa, 0xff, 0xff, 0x33, 0x01, 0x00, 0x00,
    0x33, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x75, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,
    0x67, 0x01, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00,
    0xa5, 0x01, 0x00, 0x00, 0x57, 0x02, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00,
    0xe7, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00,
    0xd3, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x7f, 0xf4, 0xff, 0xff, 0x13, 0xf5, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0xfb, 0xf2, 0xff, 0xff, 0xe6, 0xf5, 0xff, 0xff, 0x5d, 0xf6, 0xff, 0xff,
    0xe7, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x55, 0x0d, 0x00, 0x00, 0xd8, 0x0a, 0x00, 0x00,
    0xc6, 0x0f, 0x00, 0x00, 0xb1, 0xec, 0xff, 0xff, 0x29, 0x07, 0x00, 0x00, 0x4f, 0x13, 0x00, 0x00,
    0x11, 0xf9, 0xff, 0xff, 0xa3, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
    0x09, 0x02, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
    0xb5, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00,
    0x4b, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00,
    0x1d, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x8a, 0xf4, 0xff, 0xff, 0x16, 0xf5, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xf4, 0xf2, 0xff, 0xff,
    0xd4, 0xf5, 0xff, 0xff, 0x72, 0xf6, 0xff, 0xff, 0xe3, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x83, 0x0e, 0x00, 0x00, 0xce, 0x0b, 0x00, 0x00, 0xc9, 0x0f, 0x00, 0x00, 0xb8, 0xeb, 0xff, 0xff,
    0xa2, 0x07, 0x00, 0x00, 0x48, 0x14, 0x00, 0x00, 0x95, 0xf8, 0xff, 0xff, 0xc1, 0x01, 0x00, 0x00,
    0xc1, 0x01, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00,
    0x1d, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00,
    0x77, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00,
    0xd7, 0x02, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00,
    0xbd, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x7e, 0xf4, 0xff, 0xff, 0x0e, 0xf5, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0xf1, 0xf2, 0xff, 0xff, 0xe1, 0xf5, 0xff, 0xff, 0x5d, 0xf6, 0xff, 0xff,
    0xe8, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x4a, 0x09, 0x00, 0x00, 0xbd, 0x07, 0x00, 0x00,
    0x98, 0x0f, 0x00, 0x00, 0x29, 0xf1, 0xff, 0xff, 0x65, 0x05, 0x00, 0x00, 0xd7, 0x0e, 0x00, 0x00,
    0x04, 0xfb, 0xff, 0xff, 0x8d, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
    0xe7, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00,
    0xad, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x2d, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00,
    0x2d, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
    0xf5, 0x02, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x37, 0xf4, 0xff, 0xff, 0xbf, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xc6, 0xf2, 0xff, 0xff,
    0x70, 0xf5, 0xff, 0xff, 0xfb, 0xf5, 0xff, 0xff, 0x92, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xcd, 0x0c, 0x00, 0x00, 0xab, 0x0a, 0x00, 0x00, 0xa9, 0x0f, 0x00, 0x00, 0xc3, 0xec, 0xff, 0xff,
    0x30, 0x07, 0x00, 0x00, 0x3d, 0x13, 0x00, 0x00, 0x27, 0xf9, 0xff, 0xff, 0x1d, 0x02, 0x00, 0x00,
    0x1d, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
    0x81, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x19, 0x01, 0x00, 0x00,
    0xf5, 0x02, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
    0x6d, 0x03, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00,
    0x47, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x2a, 0xf4, 0xff, 0xff, 0xb7, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0xb7, 0xf2, 0xff, 0xff, 0x77, 0xf5, 0xff, 0xff, 0xf7, 0xf5, 0xff, 0xff,
    0x8b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xef, 0x0d, 0x00, 0x00, 0x9c, 0x0b, 0x00, 0x00,
    0xae, 0x0f, 0x00, 0x00, 0xca, 0xeb, 0xff, 0xff, 0xa9, 0x07, 0x00, 0x00, 0x36, 0x14, 0x00, 0x00,
    0xa9, 0xf8, 0xff, 0xff, 0x4b, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00,
    0xdd, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00,
    0x3b, 0x03, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00,
    0x7f, 0x04, 0x00, 0x00, 0xfd, 0x04, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x2d, 0xf4, 0xff, 0xff, 0xb6, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xb8, 0xf2, 0xff, 0xff,
    0x80, 0xf5, 0xff, 0xff, 0xf9, 0xf5, 0xff, 0xff, 0x92, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xe7, 0x08, 0x00, 0x00, 0x9c, 0x07, 0x00, 0x00, 0x76, 0x0f, 0x00, 0x00, 0x3a, 0xf1, 0xff, 0xff,
    0x6f, 0x05, 0x00, 0x00, 0xc6, 0x0e, 0x00, 0x00, 0x1b, 0xfb, 0xff, 0xff, 0xe7, 0x01, 0x00, 0x00,
    0xe7, 0x01, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x59, 0x02, 0x00, 0x00, 0xe7, 0x01, 0x00, 0x00,
    0x41, 0x02, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
    0xab, 0x02, 0x00, 0x00, 0xcb, 0x03, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00,
    0x13, 0x03, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00,
    0xf5, 0x02, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x02, 0xf4, 0xff, 0xff, 0x86, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x98, 0xf2, 0xff, 0xff, 0x3b, 0xf5, 0xff, 0xff, 0xba, 0xf5, 0xff, 0xff,
    0x61, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x44, 0x0c, 0x00, 0x00, 0x7d, 0x0a, 0x00, 0x00,
    0x8d, 0x0f, 0x00, 0x00, 0xd5, 0xec, 0xff, 0xff, 0x37, 0x07, 0x00, 0x00, 0x2b, 0x13, 0x00, 0x00,
    0x3c, 0xf9, 0xff, 0xff, 0xa1, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
    0x3b, 0x03, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
    0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00,
    0xa9, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00,
    0x09, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xfe, 0xf3, 0xff, 0xff, 0x88, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x98, 0xf2, 0xff, 0xff,
    0x39, 0xf5, 0xff, 0xff, 0xbb, 0xf5, 0xff, 0xff, 0x5d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x5a, 0x0d, 0x00, 0x00, 0x6b, 0x0b, 0x00, 0x00, 0x93, 0x0f, 0x00, 0x00, 0xdc, 0xeb, 0xff, 0xff,
    0xaf, 0x07, 0x00, 0x00, 0x24, 0x14, 0x00, 0x00, 0xbe, 0xf8, 0xff, 0xff, 0xd7, 0x02, 0x00, 0x00,
    0xd7, 0x02, 0x00, 0x00, 0xb9, 0x03, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0xd7, 0x02, 0x00, 0x00,
    0x5b, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00,
    0xfb, 0x03, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00,
    0x93, 0x04, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00,
    0x69, 0x04, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xfe, 0xf3, 0xff, 0xff, 0x87, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x9b, 0xf2, 0xff, 0xff, 0x3d, 0xf5, 0xff, 0xff, 0xb8, 0xf5, 0xff, 0xff,
    0x5b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x84, 0x08, 0x00, 0x00, 0x7b, 0x07, 0x00, 0x00,
    0x54, 0x0f, 0x00, 0x00, 0x4b, 0xf1, 0xff, 0xff, 0x79, 0x05, 0x00, 0x00, 0xb5, 0x0e, 0x00, 0x00,
    0x33, 0xfb, 0xff, 0xff, 0x41, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00,
    0xcf, 0x02, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00,
    0x29, 0x03, 0x00, 0x00, 0xa9, 0x03, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00,
    0x5d, 0x04, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0x73, 0x03, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xe1, 0xf3, 0xff, 0xff, 0x67, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x85, 0xf2, 0xff, 0xff,
    0x18, 0xf5, 0xff, 0xff, 0x94, 0xf5, 0xff, 0xff, 0x48, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xbc, 0x0b, 0x00, 0x00, 0x50, 0x0a, 0x00, 0x00, 0x71, 0x0f, 0x00, 0x00, 0xe7, 0xec, 0xff, 0xff,
    0x3e, 0x07, 0x00, 0x00, 0x19, 0x13, 0x00, 0x00, 0x52, 0xf9, 0xff, 0xff, 0x1d, 0x03, 0x00, 0x00,
    0x1d, 0x03, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x1d, 0x03, 0x00, 0x00,
    0xad, 0x03, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00,
    0x5d, 0x04, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x09, 0x05, 0x00, 0x00,
    0xff, 0x04, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xb9, 0x06, 0x00, 0x00,
    0xd5, 0x04, 0x00, 0x00, 0xc1, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xe3, 0xf3, 0xff, 0xff, 0x65, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x88, 0xf2, 0xff, 0xff, 0x1b, 0xf5, 0xff, 0xff, 0x94, 0xf5, 0xff, 0xff,
    0x3e, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xc5, 0x0c, 0x00, 0x00, 0x39, 0x0b, 0x00, 0x00,
    0x78, 0x0f, 0x00, 0x00, 0xee, 0xeb, 0xff, 0xff, 0xb5, 0x07, 0x00, 0x00, 0x12, 0x14, 0x00, 0x00,
    0xd3, 0xf8, 0xff, 0xff, 0x5f, 0x03, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00,
    0x3f, 0x04, 0x00, 0x00, 0x5f, 0x03, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00,
    0x7b, 0x01, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0xc5, 0x06, 0x00, 0x00,
    0xbd, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00,
    0x9d, 0x06, 0x00, 0x00, 0x4f, 0x07, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x2f, 0x05, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xe1, 0xf3, 0xff, 0xff, 0x62, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x87, 0xf2, 0xff, 0xff,
    0x24, 0xf5, 0xff, 0xff, 0x93, 0xf5, 0xff, 0xff, 0x48, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x21, 0x08, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 0x5c, 0xf1, 0xff, 0xff,
    0x83, 0x05, 0x00, 0x00, 0xa4, 0x0e, 0x00, 0x00, 0x4b, 0xfb, 0xff, 0xff, 0xa1, 0x02, 0x00, 0x00,
    0xa1, 0x02, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00,
    0x1d, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
    0xad, 0x03, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xad, 0x03, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00,
    0x3f, 0x04, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00,
    0x0f, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xd0, 0xf3, 0xff, 0xff, 0x51, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x7f, 0xf2, 0xff, 0xff, 0x01, 0xf5, 0xff, 0xff, 0x78, 0xf5, 0xff, 0xff,
    0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x33, 0x0b, 0x00, 0x00, 0x22, 0x0a, 0x00, 0x00,
    0x55, 0x0f, 0x00, 0x00, 0xfa, 0xec, 0xff, 0xff, 0x44, 0x07, 0x00, 0x00, 0x06, 0x13, 0x00, 0x00,
    0x67, 0xf9, 0xff, 0xff, 0x97, 0x03, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00,
    0x7f, 0x04, 0x00, 0x00, 0xa1, 0x03, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00,
    0x99, 0x01, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
    0x11, 0x05, 0x00, 0x00, 0xd5, 0x05, 0x00, 0x00, 0xcb, 0x05, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00,
    0xf7, 0x06, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xd0, 0xf3, 0xff, 0xff, 0x4d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x7f, 0xf2, 0xff, 0xff,
    0xfe, 0xf4, 0xff, 0xff, 0x78, 0xf5, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x31, 0x0c, 0x00, 0x00, 0x08, 0x0b, 0x00, 0x00, 0x5e, 0x0f, 0x00, 0x00, 0x00, 0xec, 0xff, 0xff,
    0xba, 0x07, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0xe8, 0xf8, 0xff, 0xff, 0xf1, 0x03, 0x00, 0x00,
    0xf1, 0x03, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00,
    0xa3, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
    0x81, 0x05, 0x00, 0x00, 0xdb, 0x07, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0x5b, 0x06, 0x00, 0x00,
    0x53, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x9d, 0x07, 0x00, 0x00, 0x83, 0x08, 0x00, 0x00,
    0x17, 0x06, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xce, 0xf3, 0xff, 0xff, 0x4f, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x7d, 0xf2, 0xff, 0xff, 0x03, 0xf5, 0xff, 0xff, 0x7d, 0xf5, 0xff, 0xff,
    0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xbd, 0x07, 0x00, 0x00, 0x39, 0x07, 0x00, 0x00,
    0x11, 0x0f, 0x00, 0x00, 0x6d, 0xf1, 0xff, 0xff, 0x8c, 0x05, 0x00, 0x00, 0x93, 0x0e, 0x00, 0x00,
    0x63, 0xfb, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00,
    0xb3, 0x03, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00,
    0x51, 0x01, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x2d, 0x04, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00,
    0x2d, 0x04, 0x00, 0x00, 0xd5, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0x93, 0x02, 0x00, 0x00,
    0xbf, 0x05, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xc0, 0xf3, 0xff, 0xff, 0x40, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x6e, 0xf2, 0xff, 0xff,
    0xeb, 0xf4, 0xff, 0xff, 0x6c, 0xf5, 0xff, 0xff, 0x1b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0xab, 0x0a, 0x00, 0x00, 0xf5, 0x09, 0x00, 0x00, 0x39, 0x0f, 0x00, 0x00, 0x0c, 0xed, 0xff, 0xff,
    0x4a, 0x07, 0x00, 0x00, 0xf4, 0x12, 0x00, 0x00, 0x7d, 0xf9, 0xff, 0xff, 0x19, 0x04, 0x00, 0x00,
    0x19, 0x04, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00, 0x19, 0x04, 0x00, 0x00,
    0xe1, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00,
    0xc9, 0x05, 0x00, 0x00, 0x33, 0x08, 0x00, 0x00, 0xc9, 0x05, 0x00, 0x00, 0xa3, 0x06, 0x00, 0x00,
    0x9d, 0x06, 0x00, 0x00, 0x8f, 0x03, 0x00, 0x00, 0xed, 0x07, 0x00, 0x00, 0xdb, 0x08, 0x00, 0x00,
    0x65, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xc4, 0xf3, 0xff, 0xff, 0x3d, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x6f, 0xf2, 0xff, 0xff, 0xec, 0xf4, 0xff, 0xff, 0x64, 0xf5, 0xff, 0xff,
    0x1b, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x9c, 0x0b, 0x00, 0x00, 0xd6, 0x0a, 0x00, 0x00,
    0x43, 0x0f, 0x00, 0x00, 0x12, 0xec, 0xff, 0xff, 0xc0, 0x07, 0x00, 0x00, 0xee, 0x13, 0x00, 0x00,
    0xfd, 0xf8, 0xff, 0xff, 0x7f, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0xdb, 0x05, 0x00, 0x00,
    0x8f, 0x05, 0x00, 0x00, 0x7f, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xcf, 0x05, 0x00, 0x00,
    0xf7, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x47, 0x06, 0x00, 0x00, 0xef, 0x08, 0x00, 0x00,
    0x47, 0x06, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00,
    0x9f, 0x08, 0x00, 0x00, 0xa9, 0x09, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0xd9, 0x06, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xc1, 0xf3, 0xff, 0xff, 0x43, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x6f, 0xf2, 0xff, 0xff,
    0xeb, 0xf4, 0xff, 0xff, 0x66, 0xf5, 0xff, 0xff, 0x19, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x5a, 0x07, 0x00, 0x00, 0x18, 0x07, 0x00, 0x00, 0xf0, 0x0e, 0x00, 0x00, 0x7e, 0xf1, 0xff, 0xff,
    0x95, 0x05, 0x00, 0x00, 0x82, 0x0e, 0x00, 0x00, 0x7b, 0xfb, 0xff, 0xff, 0x55, 0x03, 0x00, 0x00,
    0x55, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x25, 0x04, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00,
    0xf5, 0x03, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00,
    0xb1, 0x04, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00,
    0x65, 0x05, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
    0x2f, 0x05, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xb6, 0xf3, 0xff, 0xff, 0x3c, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff, 0xe2, 0xf4, 0xff, 0xff, 0x57, 0xf5, 0xff, 0xff,
    0x0c, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x22, 0x0a, 0x00, 0x00, 0xc7, 0x09, 0x00, 0x00,
    0x1d, 0x0f, 0x00, 0x00, 0x1e, 0xed, 0xff, 0xff, 0x50, 0x07, 0x00, 0x00, 0xe2, 0x12, 0x00, 0x00,
    0x93, 0xf9, 0xff, 0xff, 0x9d, 0x04, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00,
    0xbf, 0x05, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0x77, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00,
    0x09, 0x02, 0x00, 0x00, 0x65, 0x02, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x35, 0x09, 0x00, 0x00,
    0x79, 0x06, 0x00, 0x00, 0x73, 0x07, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00,
    0xe9, 0x08, 0x00, 0x00, 0xef, 0x09, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x13, 0x07, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xb7, 0xf3, 0xff, 0xff, 0x32, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff,
    0xe1, 0xf4, 0xff, 0xff, 0x56, 0xf5, 0xff, 0xff, 0x0d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x08, 0x0b, 0x00, 0x00, 0xa4, 0x0a, 0x00, 0x00, 0x29, 0x0f, 0x00, 0x00, 0x25, 0xec, 0xff, 0xff,
    0xc5, 0x07, 0x00, 0x00, 0xdb, 0x13, 0x00, 0x00, 0x12, 0xf9, 0xff, 0xff, 0xfd, 0x04, 0x00, 0x00,
    0xfd, 0x04, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x3d, 0x06, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00,
    0xf3, 0x05, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x33, 0x02, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00,
    0x09, 0x07, 0x00, 0x00, 0x13, 0x0a, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00,
    0x0f, 0x08, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0xad, 0x09, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00,
    0xc9, 0x07, 0x00, 0x00, 0xb5, 0x07, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xb6, 0xf3, 0xff, 0xff, 0x34, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x66, 0xf2, 0xff, 0xff, 0xdf, 0xf4, 0xff, 0xff, 0x59, 0xf5, 0xff, 0xff,
    0x0d, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0xf7, 0x06, 0x00, 0x00, 0xf7, 0x06, 0x00, 0x00,
    0xcf, 0x0e, 0x00, 0x00, 0x8f, 0xf1, 0xff, 0xff, 0x9e, 0x05, 0x00, 0x00, 0x71, 0x0e, 0x00, 0x00,
    0x93, 0xfb, 0xff, 0xff, 0xb3, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xe1, 0x04, 0x00, 0x00,
    0x9d, 0x04, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0xcf, 0x04, 0x00, 0x00,
    0xa3, 0x01, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00,
    0x51, 0x05, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0xf3, 0x05, 0x00, 0x00, 0x35, 0x03, 0x00, 0x00,
    0x27, 0x07, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xab, 0x05, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xc0, 0xf3, 0xff, 0xff, 0x2e, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x62, 0xf2, 0xff, 0xff,
    0xd4, 0xf4, 0xff, 0xff, 0x4e, 0xf5, 0xff, 0xff, 0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x9a, 0x09, 0x00, 0x00, 0x9a, 0x09, 0x00, 0x00, 0x02, 0x0f, 0x00, 0x00, 0x31, 0xed, 0xff, 0xff,
    0x55, 0x07, 0x00, 0x00, 0xcf, 0x12, 0x00, 0x00, 0xa9, 0xf9, 0xff, 0xff, 0x15, 0x05, 0x00, 0x00,
    0x15, 0x05, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x17, 0x05, 0x00, 0x00,
    0x07, 0x06, 0x00, 0x00, 0xa1, 0x06, 0x00, 0x00, 0x3b, 0x02, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00,
    0x27, 0x07, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x27, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00,
    0x33, 0x08, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00, 0xd9, 0x09, 0x00, 0x00, 0x03, 0x0b, 0x00, 0x00,
    0xeb, 0x07, 0x00, 0x00, 0xcf, 0x07, 0x00, 0x00, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xac, 0xf3, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff,
    0xcd, 0xf4, 0xff, 0xff, 0x60, 0xf2, 0xff, 0xff, 0xd3, 0xf4, 0xff, 0xff, 0x4a, 0xf5, 0xff, 0xff,
    0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x73, 0x0a, 0x00, 0x00, 0x73, 0x0a, 0x00, 0x00,
    0x0f, 0x0f, 0x00, 0x00, 0x37, 0xec, 0xff, 0xff, 0xc9, 0x07, 0x00, 0x00, 0xc9, 0x13, 0x00, 0x00,
    0x28, 0xf9, 0xff, 0xff, 0x8f, 0x05, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x45, 0x07, 0x00, 0x00,
    0xf1, 0x06, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x37, 0x07, 0x00, 0x00,
    0x77, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0x1b, 0x0b, 0x00, 0x00,
    0xc9, 0x07, 0x00, 0x00, 0xf9, 0x08, 0x00, 0x00, 0xef, 0x08, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00,
    0xbd, 0x0a, 0x00, 0x00, 0x07, 0x0c, 0x00, 0x00, 0x9f, 0x08, 0x00, 0x00, 0x83, 0x08, 0x00, 0x00,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xac, 0xf3, 0xff, 0xff, 0x27, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff, 0x60, 0xf2, 0xff, 0xff,
    0xd5, 0xf4, 0xff, 0xff, 0x4e, 0xf5, 0xff, 0xff, 0x03, 0xf4, 0xff, 0xff, 0xcd, 0xf4, 0xff, 0xff,
    0x73, 0x0a, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xf7, 0xf0, 0xff, 0xff,
    0x43, 0x05, 0x00, 0x00, 0x09, 0x0f, 0x00, 0x00, 0xbd, 0xfa, 0xff, 0xff, 0x43, 0x00, 0x00, 0x00,
    0xad, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00,
    0xf3, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
    0x39, 0x01, 0x00, 0x00, 0x7f, 0x01, 0x00, 0x00, 0xf3, 0x01, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00,
    0x33, 0x02, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
    0x09, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0x0e, 0x00, 0x00, 0xcd, 0x0c, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x8d, 0xec, 0xff, 0xff, 0x19, 0x07, 0x00, 0x00, 0x73, 0x13, 0x00, 0x00,
    0xe7, 0xf8, 0xff, 0xff, 0x61, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00,
    0x91, 0x01, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0xe7, 0x02, 0x00, 0x00,
    0x35, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00,
    0xab, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0x13, 0x03, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00,
    0xf3, 0x01, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0xc5, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00,
    0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xac, 0x0f, 0x00, 0x00, 0xef, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x94, 0xeb, 0xff, 0xff,
    0x94, 0x07, 0x00, 0x00, 0x6c, 0x14, 0x00, 0x00, 0x6c, 0xf8, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x7b, 0x01, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00,
    0xe7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00,
    0xdf, 0x01, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xe3, 0x02, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00,
    0x55, 0x03, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00,
    0x05, 0x03, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x9a, 0xf9, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x4a, 0x09, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00,
    0x65, 0x0f, 0x00, 0x00, 0x42, 0xf1, 0xff, 0xff, 0x74, 0x05, 0x00, 0x00, 0xbe, 0x0e, 0x00, 0x00,
    0x27, 0xfb, 0xff, 0xff, 0x43, 0x00, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00,
    0x15, 0x05, 0x00, 0x00, 0x81, 0x05, 0x00, 0x00, 0xab, 0x0a, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00,
    0x61, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x8b, 0x03, 0x00, 0x00,
    0x7f, 0x04, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x6d, 0x03, 0x00, 0x00,
    0xb3, 0x03, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xcd, 0x06, 0x00, 0x00,
    0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xcd, 0x0c, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00, 0x7f, 0x0f, 0x00, 0x00, 0xde, 0xec, 0xff, 0xff,
    0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00, 0x47, 0xf9, 0xff, 0xff, 0x61, 0x00, 0x00, 0x00,
    0xa3, 0x01, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x8d, 0x07, 0x00, 0x00,
    0xb7, 0x0e, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
    0x07, 0x04, 0x00, 0x00, 0xcd, 0x04, 0x00, 0x00, 0x2b, 0x06, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00,
    0x05, 0x09, 0x00, 0x00, 0xbd, 0x04, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00,
    0xdb, 0x07, 0x00, 0x00, 0x5f, 0x09, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0xef, 0x0d, 0x00, 0x00, 0x31, 0x0c, 0x00, 0x00,
    0x86, 0x0f, 0x00, 0x00, 0xe5, 0xeb, 0xff, 0xff, 0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00,
    0xc8, 0xf8, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00,
    0x9d, 0x07, 0x00, 0x00, 0x3f, 0x08, 0x00, 0x00, 0x03, 0x10, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00,
    0x95, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00,
    0xb9, 0x06, 0x00, 0x00, 0xf9, 0x08, 0x00, 0x00, 0xd9, 0x09, 0x00, 0x00, 0x27, 0x05, 0x00, 0x00,
    0x8f, 0x05, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x9b, 0x08, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00,
    0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0xb5, 0x08, 0x00, 0x00, 0x8c, 0x07, 0x00, 0x00, 0x65, 0x0f, 0x00, 0x00, 0x42, 0xf1, 0xff, 0xff,
    0x74, 0x05, 0x00, 0x00, 0xbe, 0x0e, 0x00, 0x00, 0x27, 0xfb, 0xff, 0xff, 0x49, 0x00, 0x00, 0x00,
    0xd7, 0x02, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0xeb, 0x07, 0x00, 0x00, 0x51, 0x08, 0x00, 0x00,
    0x89, 0x09, 0x00, 0x00, 0xd9, 0x0a, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00,
    0xc7, 0x03, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0xd3, 0x06, 0x00, 0x00,
    0x61, 0x07, 0x00, 0x00, 0x43, 0x04, 0x00, 0x00, 0x1b, 0x05, 0x00, 0x00, 0xa3, 0x04, 0x00, 0x00,
    0x6d, 0x07, 0x00, 0x00, 0x61, 0x07, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x00, 0x0c, 0x00, 0x00, 0x66, 0x0a, 0x00, 0x00,
    0x7f, 0x0f, 0x00, 0x00, 0xde, 0xec, 0xff, 0xff, 0x3a, 0x07, 0x00, 0x00, 0x22, 0x13, 0x00, 0x00,
    0x47, 0xf9, 0xff, 0xff, 0x65, 0x00, 0x00, 0x00, 0xf1, 0x03, 0x00, 0x00, 0x4f, 0x04, 0x00, 0x00,
    0xe7, 0x0a, 0x00, 0x00, 0x7b, 0x0b, 0x00, 0x00, 0x2b, 0x0d, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00,
    0x1d, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00,
    0x57, 0x07, 0x00, 0x00, 0x6b, 0x09, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0xe7, 0x05, 0x00, 0x00,
    0x09, 0x07, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00, 0x31, 0x0a, 0x00, 0x00,
    0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x10, 0x0d, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, 0x86, 0x0f, 0x00, 0x00, 0xe5, 0xeb, 0xff, 0xff,
    0xb2, 0x07, 0x00, 0x00, 0x1b, 0x14, 0x00, 0x00, 0xc8, 0xf8, 0xff, 0xff, 0x6d, 0x00, 0x00, 0x00,
    0x43, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xdd, 0x0b, 0x00, 0x00, 0x77, 0x0c, 0x00, 0x00,
    0x4b, 0x0e, 0x00, 0x00, 0x3f, 0x10, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00,
    0xab, 0x05, 0x00, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0x3d, 0x0a, 0x00, 0x00,
    0x15, 0x0b, 0x00, 0x00, 0x65, 0x06, 0x00, 0x00, 0xb5, 0x07, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00,
    0x1b, 0x0b, 0x00, 0x00, 0x11, 0x0b, 0x00, 0x00, 0x9a, 0xf5, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff,
    0x66, 0xf6, 0xff, 0xff, 0x66, 0xf6, 0xff, 0xff
};

static const uint8_t preset_gains[] = {
    0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    0x66, 0x0e, 0x00, 0x00, 0xef, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    0x77, 0x0f, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x89, 0x10, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    0x66, 0x0e, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    0x9a, 0x11, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0x22, 0x12, 0x00, 0x00,
    0x66, 0x0e, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00, 0xab, 0x12, 0x00, 0x00, 0x66, 0x0e, 0x00, 0x00,
    0x66, 0x0e, 0x00, 0x00, 0x33, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x11, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x9a, 0x11, 0x00, 0x00, 0x33, 0x0b, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x29, 0x0c, 0x00, 0x00
};

static const int total_gains[] = { 0x0, 0x19a, 0x333, 0x4cd, 0x666, 0x800, 0x99a, 0xb33, 0xccd, 0xe66, 0x1000 };

#pragma pack(4)
struct PresetFilter
{
    int32_t tone;
    int32_t absorb;
    int32_t d1c785c;
    int32_t gains[4];
    int32_t er_delays[7];
    int32_t er_ap1_delay;
    int32_t er_ap2_delay;
    int32_t ap3_delay;
    int32_t ap4_delay;
    int32_t ap5_delay;
    int32_t vbr1_delay;
    int32_t delay1_delay;
    int32_t ap6_delay;
    int32_t ap7_delay;
    int32_t ap8_delay;
    int32_t vbr2_delay;
    int32_t delay2_delay;
    int32_t er_ap1_gain;
    int32_t er_ap2_gain;
    int32_t ap3_gain;
    int32_t ap4_gain;
    int32_t ap5_gain;
    int32_t vbr1_gain;
    int32_t delay1_gain;
    int32_t ap6_gain;
    int32_t ap7_gain;
    int32_t ap8_gain;
    int32_t vbr2_gain;
    int32_t delay2_gain;
};

#pragma pack(4)
struct DNSE_CH::PresetGain
{
    int32_t d_gain;
    int32_t er_gain;
    int32_t r_gain;
};


//

class VFilter
{
public:
    virtual ~VFilter() {}

    virtual int32_t filter(int32_t in) = 0;
};


class DNSE_CH::FilterChain
{
public:
    void add(std::unique_ptr<VFilter> filter)
    {
        chain_.push_back(std::move(filter));
    }

    int32_t filter(int32_t in)
    {
        for (auto & f : chain_)
        {
            in = f->filter(in);
        }
        return in;
    }

private:
    std::vector<std::unique_ptr<VFilter>> chain_;
};


class DNSE_CH::DelayFilter : public VFilter
{
public:
    DelayFilter(int32_t delay)
        : delay_(delay)
    {
        delay_buff_.assign(delay, 0);
    }

    //using VFilter::filter;

    virtual ~DelayFilter() {}

protected:
    int32_t delay_;
    std::deque<int32_t> delay_buff_;
};


class DNSE_CH::APFilter : public DelayFilter
{
public:
    APFilter(int32_t delay, int32_t gain)
        : DelayFilter(delay)
        , gain_(gain)
    {}

    int32_t filter(int32_t in) override
    {
        auto last = delay_buff_.back();
        delay_buff_.pop_back();

        auto first = in + ((gain_ * last + 0x800) >> 12);
        delay_buff_.push_front(first);
        return last - (((gain_ * first) + 0x800) >> 12);
    }

protected:
    int32_t gain_;
};


class DNSE_CH::DelaySplitFilter : public DelayFilter
{
public:
    DelaySplitFilter(int32_t delay,
                     const int32_t(&gains)[4],
                     const int32_t(&er_delays)[7])
        : DelayFilter(delay)
    {
        copy(gains_, gains);
        copy(er_delays_, er_delays);
    }

    int32_t filter(int32_t in) override
    {
        assert(false);
        return 0;
    }

    std::array<int32_t, 2> filter2(int32_t in)
    {
        delay_buff_.pop_back();
        delay_buff_.push_front(in);

        auto l = (delay_buff_[er_delays_[0]] >> 1) + (delay_buff_[er_delays_[1]])
               + (delay_buff_[er_delays_[3]] >> 1) + (delay_buff_[er_delays_[5]] >> 1);
        auto r = (delay_buff_[er_delays_[0]] >> 1) + (delay_buff_[er_delays_[2]])
               + (delay_buff_[er_delays_[4]] >> 1) + (delay_buff_[er_delays_[6]] >> 1);

        return { l, r };
    }

private:
    int32_t gains_[4];
    int32_t er_delays_[7];
};


class DNSE_CH::DelayShiftFilter : public DelayFilter
{
public:
    DelayShiftFilter(int32_t delay,
                     int32_t gain,
                     int32_t absorb,
                     int32_t out_shift)
        : DelayFilter(delay)
        , gain_(gain)
        , absorb_(absorb)
        , out_shift_(out_shift)
    {
        assert(out_shift_ > 0);
    }

    int32_t last()
    {
        auto last = delay_buff_.back();
        return (last * gain_) >> 12;
    }

    int32_t filter(int32_t in) override
    {
        delay_buff_.pop_back();

        flow_ += ((((in - flow_) * absorb_) + 0x800) >> 12);
        delay_buff_.push_front(flow_);

        return delay_buff_[out_shift_ - 1];
    }

private:
    int32_t flow_ = 0;
    int32_t gain_;
    int32_t absorb_;
    int32_t out_shift_;
};

class DNSE_CH::VbrFilter : public DelayFilter
{
public:
    VbrFilter(int32_t delay,
              int32_t gain,
              int32_t shift,
              int32_t ggain)
        : DelayFilter(delay + ggain + 3)
        , shift_(shift)
        , gain_(gain)
        , ggain_(ggain)
        , vbr_delay_(delay)
    {}

    int32_t filter(int32_t in) override
    {
        delay_buff_.pop_back();

        v66 += shift_;
        if (v66 > 0x20000000)
        {
            v66 = -0x20000000;
        }
        auto pre_offset = (vbr_delay_ << 12) + ggain_ * (abs(v66) >> 17);
        auto offset = (pre_offset >> 12);
        /// ...
        // 0x20000000 >> 17 = 0x1000 ... ?
        auto offset_s = 0x1000 - (pre_offset - (pre_offset >> 12 << 12));
        // notice off-by-one when using deque instead of circular buffer
        auto data_2 = delay_buff_[std::min(size_t(offset + 1), delay_buff_.size() - 1)];
        auto data_1 = delay_buff_[std::min(size_t(offset), delay_buff_.size() - 1)];
        v66_1 = data_2 + ((offset_s * data_1) >> 12) - ((offset_s * v66_1) >> 12);
        auto y = v66_1 - ((in * gain_) >> 12);
        auto first = in + ((y * gain_) >> 12);
        delay_buff_.push_front(first);
        return y;
    }

private:
    int32_t vbr_delay_;
    int32_t shift_;
    int32_t gain_;
    int32_t ggain_;
    int32_t v66 = 0;
    int32_t v66_1 = 0;
};


class DNSE_CH::ToneFilter
{
public:
    ToneFilter(int32_t d1c785c, int32_t tone, const int32_t(&gains)[4], int32_t total_gain)
        : d1c785c_(d1c785c)
        , tone_(tone)
        , total_gain_(total_gain)
    {
        copy(gains_, gains);
    }

    int32_t filter(int32_t in)
    {
        v_tone += ((in - v_tone) * tone_ + 0x800) >> 12;

        auto v1 = v1_p * gains_[2] + v2_p * gains_[3] + ((int64_t)v_tone << 12);
        auto v2 = v1_p * gains_[0] + v2_p * gains_[1];

        v2_p = v1_p;
        v1_p = v1 >> 12;

        return ((((v1 * d1c785c_ >> 12) + v2) >> 12) * total_gain_) >> 12;
    }

private:
    int32_t total_gain_;
    int32_t tone_;
    int32_t d1c785c_;
    int32_t gains_[4];

    int     v_tone = 0;
    int64_t v1_p = 0;
    int64_t v2_p = 0;
};

//

DNSE_CH::DNSE_CH(int roomSize, int gain, int sampleRate)
{
    roomSize = std::max(1, std::min(13, roomSize));
    gain = std::max(0, std::min((int)std::size(total_gains) - 1, gain));

    auto totalGain = total_gains[gain];

    int srSelector = 1;
    if (sampleRate == 48000)
        srSelector = 2;
    else if (sampleRate == 32000)
        srSelector = 0;

    auto presetFilter = &((PresetFilter *)preset_filters)[(roomSize - 1) * 3 + srSelector];
    presetGain_ = &((PresetGain *)preset_gains)[(roomSize - 1)];

    toneFilter_ = std::make_unique<ToneFilter>(presetFilter->d1c785c,
                                               presetFilter->tone,
                                               presetFilter->gains,
                                               totalGain);
    dsFilter_ = std::make_unique<DelaySplitFilter>(4159, presetFilter->gains, presetFilter->er_delays);
    er_ap1_ = std::make_unique<APFilter>(std::min(presetFilter->er_ap1_delay, 631), presetFilter->er_ap1_gain);
    er_ap2_ = std::make_unique<APFilter>(std::min(presetFilter->er_ap2_delay, 739), presetFilter->er_ap2_gain);

    auto vbr1_delay = ((0xa3d * presetFilter->vbr1_delay) >> 12);
    ch1_ = std::make_unique<FilterChain>();
    ch1_->add(std::make_unique<APFilter>(std::min(presetFilter->ap3_delay, 1933), presetFilter->ap3_gain));
    ch1_->add(std::make_unique<APFilter>(std::min(presetFilter->ap4_delay, 2843), presetFilter->ap4_gain));
    ch1_->add(std::make_unique<APFilter>(std::min(presetFilter->ap5_delay, 2053), presetFilter->ap5_gain));
    ch1_->add(std::make_unique<VbrFilter>(std::min(vbr1_delay, 2881), presetFilter->vbr1_gain, 0x14ce, 0x102));

    delay1_ = std::make_unique<DelayShiftFilter>(std::min(presetFilter->delay1_delay, 2837),
                                                 presetFilter->delay1_gain,
                                                 presetFilter->absorb,
                                                 12);

    auto vbr2_delay = ((0xb1b * presetFilter->vbr2_delay) >> 12);
    ch2_ = std::make_unique<FilterChain>();
    ch2_->add(std::make_unique<APFilter>(std::min(presetFilter->ap6_delay, 1637), presetFilter->ap6_gain));
    ch2_->add(std::make_unique<APFilter>(std::min(presetFilter->ap7_delay, 2749), presetFilter->ap7_gain));
    ch2_->add(std::make_unique<APFilter>(std::min(presetFilter->ap8_delay, 3079), presetFilter->ap8_gain));
    ch2_->add(std::make_unique<VbrFilter>(std::min(vbr2_delay, 3038), presetFilter->vbr2_gain, 0x17c6, 0xc0));

    delay2_ = std::make_unique<DelayShiftFilter>(std::min(presetFilter->delay2_delay, 2833),
                                                 presetFilter->delay2_gain,
                                                 presetFilter->absorb,
                                                 22);
}

DNSE_CH::~DNSE_CH()
{}

void DNSE_CH::filter(int16_t l, const int16_t r,
                     int16_t * l_out, int16_t * r_out)
{
    auto sum = (l + r) >> 2;

    auto tone = toneFilter_->filter(sum);
    auto [ls, rs] = dsFilter_->filter2(tone);

    auto ap1 = er_ap1_->filter(ls);
    auto ap2 = er_ap2_->filter(rs);

    auto sec1in = ap1 - delay2_->last();
    auto sec2in = ap2 + delay1_->last();

    auto dr1 = delay1_->filter(ch1_->filter(sec1in));
    auto dr2 = delay2_->filter(ch2_->filter(sec2in));

    auto r1 = ((dr1 * presetGain_->r_gain + ap1 * presetGain_->er_gain) >> 12);
    auto r2 = ((dr2 * presetGain_->r_gain + ap2 * presetGain_->er_gain) >> 12);

    r1 = (r1 + l) >> 1;
    r2 = (r2 + r) >> 1;

    r1 = std::min(0x7FFF, std::max(-0x8000, r1));
    r2 = std::min(0x7FFF, std::max(-0x8000, r2));

    *l_out = r1;
    *r_out = r2;
}
